{"version":3,"sources":["components/EnodeTab/styles.module.scss","components/AccountTab/styles.module.scss","components/AdminTab/styles.module.scss","components/AppBar/styles.module.scss","components/Footer/styles.module.scss","components/Modals/styles.module.scss","components/Flashes/styles.module.scss","components/AppBar/AppBar.tsx","components/Footer/index.tsx","components/Layout/Layout.tsx","context/configData.tsx","chain/provider.ts","chain/contracts/AccountIngress.ts","chain/contracts/NodeIngress.ts","context/network.tsx","containers/Layout/Initializer.tsx","chain/contracts/AccountRules.ts","context/accountData.tsx","chain/contracts/Admin.ts","context/adminData.tsx","chain/contracts/NodeRules.ts","util/enodetools.ts","context/nodeData.tsx","constants/tabs.ts","components/Dashboard/TabSelector.tsx","context/toasts.tsx","context/useTimeout.tsx","components/Toasts/Pending.tsx","components/Toasts/Error.tsx","components/Toasts/Success.tsx","constants/transactions.ts","components/Toasts/Toasts.tsx","containers/Toasts/Toasts.tsx","containers/Tabs/useTab.ts","containers/Tabs/useModal.tsx","containers/Tabs/useTransaction.ts","util/array.ts","util/tabTools.ts","components/AccountTab/TableHeader.tsx","components/AccountTab/TextWithTooltip.tsx","components/AccountTab/Row.tsx","components/AccountTab/EmptyRow.tsx","components/AccountTab/Table.tsx","components/Modals/Add.tsx","containers/Modals/Add.tsx","components/Modals/Remove.tsx","containers/Modals/Remove.tsx","constants/modals.ts","components/AccountTab/AccountTab.tsx","components/LoadingPage/LoadingPage.tsx","components/Flashes/NoContract.tsx","containers/Tabs/Account.tsx","components/AdminTab/TableHeader.tsx","components/AdminTab/TextWithTooltip.tsx","components/AdminTab/Row.tsx","components/AdminTab/Table.tsx","components/AdminTab/AdminTab.tsx","containers/Tabs/Admin.tsx","components/EnodeTab/TableHeader.tsx","components/EnodeTab/TextWithTooltip.tsx","components/EnodeTab/Row.tsx","components/EnodeTab/EmptyRow.tsx","components/EnodeTab/Table.tsx","components/EnodeTab/EnodeTab.tsx","containers/Tabs/Enode.tsx","components/Dashboard/Dashboard.tsx","containers/Dashboard/Dashboard.tsx","components/Flashes/NoProvider.tsx","components/Flashes/WrongNetwork.tsx","constants/colors.ts","constants/theme.ts","util/configLoader.ts","App.tsx","serviceWorker.ts","index.tsx","components/Toasts/styles.module.scss","components/Dashboard/styles.module.scss"],"names":["module","exports","headerCell","emptyLine","pill","row","removeIcon","ellipsis","pendingAddition","lock","pendingRemoval","lockButton","tooltipFix","appBar","footerLogo","fieldInput","errorMessage","show","validField","closeIcon","invalidField","break","icon","AppBar","react_default","a","createElement","index_es","position","top","height","alignItems","justifyContent","bg","className","styles","pl","pr","width","zIndex","h3","Footer","href","target","rel","Layout","_ref","children","flexDirection","minHeight","components_AppBar_AppBar","mt","mb","components_Footer","ConfigDataContext","createContext","undefined","ConfigDataProvider","props","Provider","Object","assign","value","config","useConfig","context","useContext","Error","provider","web3","web3Factory","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","window","ethereum","enable","Web3","givenProvider","stop","apply","this","arguments","providerFactory","_ref2","_callee2","_context2","sent","ethers","providers","Web3Provider","currentProvider","getSigner","listenForAccountChange","_ref3","_callee4","callback","account","_context4","eth","getAccounts","setInterval","_callee3","newAccount","_context3","_x","instance","accountIngressFactory","Contract","accountIngressAddress","AccountIngressAbi","abi","_x2","nodeIngressFactory","nodeIngressAddress","NodeIngressAbi","NetworkContext","NetworkProvider","_useState","useState","_useState2","slicedToArray","accountIngressContract","setAccountIngressContract","_useState3","_useState4","nodeIngressContract","setNodeIngressContract","_useState5","_useState6","networkId","setNetworkId","useEffect","then","accountIngress","nodeIngress","useMemo","contracts","useNetwork","ingress","getNetwork","network","chainId","isCorrectNetwork","toString","Initializer","NoProvider","WrongNetwork","_useNetwork","accountRulesFactory","ingressInstance","ruleContractName","accountRulesAddress","functions","RULES_CONTRACT","getContractAddress","AccountRulesAbi","signer","AccountDataContext","loadAccountData","accountRulesContract","setAccountList","setAccountReadOnly","isReadOnly","getSize","listSize","listElementsPromises","i","gt","push","getByIndex","Promise","all","responses","map","address","AccountDataProvider","accountList","accountReadOnly","setAccountRulesContract","contract","removeAllListeners","on","success","event","adminFactory","adminContractName","adminAddress","ADMIN_CONTRACT","AdminAbi","AdminDataContext","loadAdminData","adminContract","setAdmins","getAdmins","admins","AdminDataProvider","setAdminContract","userAddress","setUserAddress","ingressContract","message","getAddress","useAdminData","formattedAdmins","identifier","toLowerCase","status","reverse","dataReady","isAdmin","includes","nodeRulesFactory","nodeRulesAddress","NodeRulesAbi","enodeToParams","enodeURL","enodeId","ip","port","extraParams","Map","node","URL","protocol","username","length","hostname","searchParams","forEach","name","set","err","paramsToIdentifier","concat","identifierToParams","_identifier$split","split","_identifier$split2","identifierToEnodeId","_identifier$split3","DataContext","loadNodeData","nodeRulesContract","setNodeList","setNodeReadOnly","listElementPromises","updatedNodeList","r","withStringyPort","objectSpread2","NodeDataProvider","nodeList","nodeReadOnly","setNodeRulesContract","tabs","id","text","memo","tab","setTab","choicesContainer","key","selected","choiceBox","px","onClick","fontWeight","textAlign","ToastContext","ToastProvider","toasts","setToasts","useToast","addTimeout","timeouts","setTimeouts","timeoutId","clearTimeout","useCallback","toConsumableArray","useTimeout","toastsOpt","closeToast","targetedIdentifier","updatedToasts","index","findIndex","splice","openToast","secondaryMessage","timeout","setTimeout","updateToast","Processing","minWidth","closeElem","closeFunction","fadeIn","Failure","fadeInOut","Success","bottom","postition","SUCCESS","FAIL","right","messages","objectWithoutProperties","react","Pending","Toasts_Error","ToastsContainer","_useToast","components_Toasts_Toasts","useTab","originalList","list","setList","_useModal","add","remove","modals","setModals","toggleModal","modal","defineProperty","useModal","_useTransaction","transactions","setTransactions","addTransaction","updatedTransactions","updateTransaction","deleteTransaction","delete","useTransaction","searchingObject","some","element","entries","reduce","acc","derivedList","has","get","pending","updatedList","arr1","arr2","searchingKeys","isSimilar","areArrayEqual","map1","map2","size","areMapEqual","errorToast","error","defaultToast","TableHeader","number","openAddModal","disabledAdd","display","h2","disabled","TextWithTooltip","fontSize","placement","variant","classnames","AccountRow","openRemoveModal","AccountTab_TextWithTooltip","color","ml","Text","mainColor","icononly","EmptyRow","colSpan","AccountTable","AccountTab_TableHeader","Row","AccountTab_EmptyRow","AddModal","input","validationResult","modifyInput","handleSubmit","isOpen","closeModal","p","mr","onSubmit","heading","subHeading","Field","label","valid","Input","type","placeholder","inputPlaceholder","onChange","required","msg","py","borderTop","borderStyle","borderColor","Outline","hovercolor","border","submitText","AddModalContainer","handleAdd","isValid","setInput","validation","setValidation","Add","e","preventDefault","RemoveModal","RemoveModalContainer","handleRemove","Remove","addAdminDisplay","addAccountDisplay","addEnodeDisplay","AccountTab","Table","Modals_Add","Boolean","Modals_Remove","LoadingPage","NoContract","tabName","span","AccountTabContainer","_useAdminData","adminDataReady","_useAccountData","formattedAccountList","allowlist","useAccountData","_useTab","tx","receipt","addEvent","addSuccessResult","addAccount","wait","events","filter","pop","idx","_","args","t0","est","estimate","removeAccount","gasLimit","toNumber","console","log","allDataReady","components_AccountTab_AccountTab","isAddress","item","components_LoadingPage_LoadingPage","Flashes_NoContract","AdminRow","isSelf","AdminTab_TextWithTooltip","AdminTable","AdminTab_TableHeader","AdminTab_Row","AdminTab","AdminTab_Table","AdminTabContainer","addAdmin","removeAdmin","components_AdminTab_AdminTab","EnodeRow","EnodeTab_TextWithTooltip","EnodeTable","EnodeTab_TableHeader","enode","EnodeTab_Row","EnodeTab_EmptyRow","EnodeTab","EnodeTab_Table","EnodeTabContainer","_useNodeData","formattedNodeList","useNodeData","_enodeToParams","addEnode","utils","bigNumberify","_identifierToParams","removeEnode","components_EnodeTab_EnodeTab","str","values","node1","node2","isDuplicateEnode","Dashboard_TabSelector","toasts_ToastProvider","containers_Toasts_Toasts","adminData_AdminDataProvider","accountData_AccountDataProvider","Account","Tabs_Admin","nodeData_NodeDataProvider","Enode","DashboardContainer","components_Dashboard_Dashboard","bold","title","baseColors","black","white","blue","green","yellow","red","blurple","consensysblue","colors","base","readableColor","light","tint","dark","shade","theme","fontSizes","fontWeights","letterSpacings","lineHeights","solid","copy","fonts","serif","sansSerif","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","primary-light","primary-dark","copyColor","near-black","dark-gray","mid-gray","grey","silver","light-silver","moon-gray","light-gray","near-white","transparent","blacks","whites","zIndices","messageStyle","backgroundColor","warning","danger","info","buttons","--main-color","--contrast-color","buttonSizes","small","padding","medium","large","configPromise","response","accountIngressNetworks","nodeIngressNetworks","nodeIngressNetworkId","fetch","ok","json","catch","reason","process","AccountIngress","networks","NodeIngress","keys","loadConfig","initApp","ReactDOM","render","App_App","App","configData_ConfigDataProvider","styled_components_browser_esm","network_NetworkProvider","components_Layout_Layout","Layout_Initializer","NoProviderFlash","WrongNetworkFlash","containers_Dashboard_Dashboard","location","match","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e571573b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerCell\":\"styles_headerCell__2ssa9\",\"emptyLine\":\"styles_emptyLine__BEhOq\",\"pill\":\"styles_pill__1xg0m\",\"row\":\"styles_row__3xNr8\",\"removeIcon\":\"styles_removeIcon__kLlBY\",\"ellipsis\":\"styles_ellipsis__3oopY\",\"pendingAddition\":\"styles_pendingAddition__RpI-_\",\"lock\":\"styles_lock__2s8jI\",\"pendingRemoval\":\"styles_pendingRemoval__1fbaY\",\"lockButton\":\"styles_lockButton__2aZKB\",\"tooltipFix\":\"styles_tooltipFix__2tuCw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerCell\":\"styles_headerCell__1B3_r\",\"emptyLine\":\"styles_emptyLine__3BkfD\",\"pill\":\"styles_pill__21MqW\",\"row\":\"styles_row__-cfVQ\",\"removeIcon\":\"styles_removeIcon__3vv-J\",\"ellipsis\":\"styles_ellipsis__2hM9S\",\"pendingAddition\":\"styles_pendingAddition__9eUoR\",\"lock\":\"styles_lock__3S_pk\",\"pendingRemoval\":\"styles_pendingRemoval__No2SW\",\"tooltipFix\":\"styles_tooltipFix__2J0CT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerCell\":\"styles_headerCell__2Pgpr\",\"emptyLine\":\"styles_emptyLine__8JDtN\",\"pill\":\"styles_pill__O0TJT\",\"row\":\"styles_row__F4naL\",\"removeIcon\":\"styles_removeIcon__2eFDO\",\"ellipsis\":\"styles_ellipsis__Cnkpj\",\"pendingAddition\":\"styles_pendingAddition__y8yZy\",\"lock\":\"styles_lock__3CxAL\",\"pendingRemoval\":\"styles_pendingRemoval__G9HWU\",\"tooltipFix\":\"styles_tooltipFix__1U3SI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appBar\":\"styles_appBar__38JWv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footerLogo\":\"styles_footerLogo__1UQKC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldInput\":\"styles_fieldInput__3rszn\",\"errorMessage\":\"styles_errorMessage__1Y-7x\",\"show\":\"styles_show__3kvkh\",\"validField\":\"styles_validField__3yBRA\",\"closeIcon\":\"styles_closeIcon__1PgNx\",\"invalidField\":\"styles_invalidField__tqKwv\",\"break\":\"styles_break__jkeWa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"styles_icon__2AC03\"};","// Libs\nimport React from 'react';\n// Rimble Components\nimport { Flex, Heading } from 'rimble-ui';\n// Styles\nimport styles from './styles.module.scss';\n\nconst AppBar: React.FC<{}> = () => (\n  <Flex\n    position=\"sticky\"\n    top=\"0\"\n    height=\"100px\"\n    alignItems=\"center\"\n    justifyContent=\"space-between\"\n    bg=\"white\"\n    className={styles.appBar}\n    pl={4}\n    pr={5}\n    width=\"100%\"\n    zIndex=\"2\"\n  >\n    <Heading.h3>Besu Permissioning</Heading.h3>\n  </Flex>\n);\n\nexport default AppBar;\n","import React from 'react';\nimport { Flex } from 'rimble-ui';\nimport styles from './styles.module.scss';\n\nconst Footer: React.FC<{}> = () => {\n  return (\n    <Flex>\n      <a href=\"https://consensys.net/quorum\" target=\"_blank\" rel=\"noopener noreferrer\" className={styles.footerLogo}>\n        Created by ConsenSys\n      </a>\n    </Flex>\n  );\n};\n\nexport default Footer;\n","// Libs\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// Rimble Components\nimport { Flex, Box } from 'rimble-ui';\n// Containers\nimport AppBar from '../AppBar/AppBar';\nimport Footer from '../Footer';\n\nconst Layout: React.FC<{}> = ({ children }) => (\n  <Flex pl={5} pr={5} flexDirection=\"column\" bg=\"rgba( 200, 200, 200, .1)\" minHeight=\"100vh\" alignItems=\"center\">\n    <AppBar />\n    <Box width={4 / 5} mt={5} mb={3}>\n      {children}\n    </Box>\n    <Footer />\n  </Flex>\n);\n\nLayout.propTypes = {\n  children: PropTypes.object.isRequired\n};\n\nexport default Layout;\n","import React, { createContext, useContext } from 'react';\nimport { Config } from '../util/configLoader';\n\ntype ContextType =\n  | {\n      config: Config;\n    }\n  | undefined;\n\nconst ConfigDataContext = createContext<ContextType>(undefined);\n\nexport const ConfigDataProvider: React.FC<{ config: Config }> = props => {\n  return <ConfigDataContext.Provider value={{ config: props.config }} {...props} />;\n};\n\nexport const useConfig = () => {\n  const context = useContext(ConfigDataContext);\n\n  if (!context) {\n    throw new Error('useConfig must be used within a ConfigDataProvider');\n  }\n\n  return context.config;\n};\n","import { Provider, AsyncSendable } from 'ethers/providers';\nimport { ethers, Signer } from 'ethers';\nimport Web3 from 'web3';\n\nlet provider: Provider | Signer | undefined = undefined;\nlet web3: Web3 | undefined = undefined;\ndeclare let window: any;\n\nconst web3Factory = async () => {\n  if (web3) return web3;\n\n  if (window.ethereum) {\n    await window.ethereum.enable();\n  }\n\n  web3 = new Web3(Web3.givenProvider);\n  return web3;\n};\n\nexport const providerFactory = async () => {\n  if (provider) return provider;\n\n  const web3 = await web3Factory();\n  provider = new ethers.providers.Web3Provider(web3.currentProvider as AsyncSendable).getSigner();\n\n  return provider;\n};\n\nexport const listenForAccountChange = async (callback: (address: string) => void) => {\n  const web3 = await web3Factory();\n  let account = (await web3.eth.getAccounts())[0];\n  setInterval(async function() {\n    const newAccount = (await web3.eth.getAccounts())[0];\n    if (newAccount !== account) {\n      account = newAccount;\n      callback(account);\n    }\n  }, 100);\n};\n","import { Contract, Signer } from 'ethers';\nimport { Provider } from 'ethers/providers';\nimport AccountIngressAbi from '../abis/AccountIngress.json';\nimport { AccountIngress } from '../@types/AccountIngress';\nimport { Config } from '../../util/configLoader';\n\nlet instance: AccountIngress | null = null;\n\nexport const accountIngressFactory = async (config: Config, provider: Provider | Signer) => {\n  if (instance) return instance;\n\n  instance = new Contract(config.accountIngressAddress, AccountIngressAbi.abi, provider) as AccountIngress;\n  return instance;\n};\n","import { Contract, Signer } from 'ethers';\nimport { Provider } from 'ethers/providers';\nimport NodeIngressAbi from '../abis/NodeIngress.json';\nimport { NodeIngress } from '../@types/NodeIngress';\nimport { Config } from '../../util/configLoader';\n\nlet instance: NodeIngress | null = null;\n\nexport const nodeIngressFactory = async (config: Config, provider: Provider | Signer) => {\n  if (instance) return instance;\n\n  instance = new Contract(config.nodeIngressAddress, NodeIngressAbi.abi, provider) as NodeIngress;\n  return instance;\n};\n","// Libs\nimport React, { useContext, useEffect, useState, createContext, useMemo } from 'react';\nimport { useConfig } from '../context/configData';\n\nimport { providerFactory } from '../chain/provider';\nimport { AccountIngress } from '../chain/@types/AccountIngress';\nimport { accountIngressFactory } from '../chain/contracts/AccountIngress';\nimport { NodeIngress } from '../chain/@types/NodeIngress';\nimport { nodeIngressFactory } from '../chain/contracts/NodeIngress';\n\ntype ContextType =\n  | {\n      networkId?: number;\n      setNetworkId: React.Dispatch<React.SetStateAction<number | undefined>>;\n      contracts: {\n        accountIngressContract?: AccountIngress;\n        setAccountIngressContract: React.Dispatch<React.SetStateAction<AccountIngress | undefined>>;\n        nodeIngressContract?: NodeIngress;\n        setNodeIngressContract: React.Dispatch<React.SetStateAction<NodeIngress | undefined>>;\n      };\n    }\n  | undefined;\n\nconst NetworkContext = createContext<ContextType>(undefined);\n\n/**\n * Provider for the network context that contains informations about the\n * blockchain provider\n */\nexport const NetworkProvider: React.FC<{}> = props => {\n  const [accountIngressContract, setAccountIngressContract] = useState<AccountIngress | undefined>(undefined);\n  const [nodeIngressContract, setNodeIngressContract] = useState<NodeIngress | undefined>(undefined);\n  const [networkId, setNetworkId] = useState<number | undefined>(undefined);\n\n  const config = useConfig();\n\n  useEffect(() => {\n    providerFactory().then(provider => {\n      accountIngressFactory(config, provider).then(accountIngress => setAccountIngressContract(accountIngress));\n      nodeIngressFactory(config, provider).then(nodeIngress => setNodeIngressContract(nodeIngress));\n    });\n  }, [config]);\n\n  const value = useMemo(\n    () => ({\n      networkId,\n      setNetworkId,\n      contracts: {\n        accountIngressContract,\n        setAccountIngressContract,\n        nodeIngressContract,\n        setNodeIngressContract\n      }\n    }),\n    [\n      accountIngressContract,\n      setAccountIngressContract,\n      nodeIngressContract,\n      setNodeIngressContract,\n      networkId,\n      setNetworkId\n    ]\n  );\n\n  return <NetworkContext.Provider value={value} {...props} />;\n};\n\n/**\n * Synchronize with the blockchain network\n * @return {Object} The network informations:\n *  - isCorrectNetwork: true if the detected network is one of the allowed\n *  networks by the contracts, false if it is not, null if there is no detected\n *  network,\n *  - networkId: The id of the network,\n */\nexport const useNetwork = () => {\n  const context = useContext(NetworkContext);\n  if (!context) {\n    throw new Error('useNetwork must be used within a DataProvider.');\n  }\n\n  const config = useConfig();\n\n  const { contracts, networkId, setNetworkId } = context;\n\n  useEffect(() => {\n    const ingress = contracts.accountIngressContract || contracts.nodeIngressContract;\n    if (ingress === undefined) {\n      setNetworkId(undefined);\n    } else {\n      ingress.provider.getNetwork().then(network => setNetworkId(network.chainId));\n    }\n  }, [contracts.accountIngressContract, contracts.nodeIngressContract, setNetworkId]);\n\n  const isCorrectNetwork = useMemo(() => {\n    if (networkId === undefined) {\n      return undefined;\n    } else {\n      return config.networkId === 'any' || networkId.toString() === config.networkId;\n    }\n  }, [networkId, config.networkId]);\n\n  return {\n    isCorrectNetwork,\n    networkId,\n    accountIngressContract: contracts.accountIngressContract,\n    nodeIngressContract: contracts.nodeIngressContract\n  };\n};\n","// Libs\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// Context\nimport { useNetwork } from '../../context/network';\n\nconst Initializer: React.FC<{ NoProvider: React.FC<{}>; WrongNetwork: React.FC<{ networkId: number }> }> = ({\n  children,\n  NoProvider,\n  WrongNetwork\n}) => {\n  const { networkId, isCorrectNetwork } = useNetwork();\n  if (isCorrectNetwork === undefined) {\n    return <NoProvider />;\n  } else if (isCorrectNetwork) {\n    return <div>{children}</div>;\n  } else {\n    return <WrongNetwork networkId={networkId!} />;\n  }\n};\n\nInitializer.propTypes = {\n  NoProvider: PropTypes.func.isRequired,\n  WrongNetwork: PropTypes.func.isRequired\n};\n\nexport default Initializer;\n","import { Contract } from 'ethers';\nimport AccountRulesAbi from '../abis/AccountRules.json';\nimport { AccountIngress } from '../@types/AccountIngress';\nimport { AccountRules } from '../@types/AccountRules';\n\nlet instance: AccountRules | null = null;\n\nexport const accountRulesFactory = async (ingressInstance: AccountIngress) => {\n  if (instance) return instance;\n\n  const ruleContractName = await ingressInstance.functions.RULES_CONTRACT();\n  const accountRulesAddress = await ingressInstance.functions.getContractAddress(ruleContractName);\n\n  instance = new Contract(accountRulesAddress, AccountRulesAbi.abi, ingressInstance.signer) as AccountRules;\n  return instance;\n};\n","import React, { createContext, useContext, useEffect, useState, useMemo } from 'react';\nimport { AccountRules } from '../chain/@types/AccountRules';\nimport { accountRulesFactory } from '../chain/contracts/AccountRules';\nimport { useNetwork } from './network';\n\ntype Account = { address: string };\n\ntype ContextType =\n  | {\n      accountList: Account[];\n      setAccountList: React.Dispatch<React.SetStateAction<Account[]>>;\n      accountReadOnly?: boolean;\n      setAccountReadOnly: React.Dispatch<React.SetStateAction<boolean | undefined>>;\n      accountRulesContract?: AccountRules;\n      setAccountRulesContract: React.Dispatch<React.SetStateAction<AccountRules | undefined>>;\n    }\n  | undefined;\n\nconst AccountDataContext = createContext<ContextType>(undefined);\n\nconst loadAccountData = (\n  accountRulesContract: AccountRules | undefined,\n  setAccountList: (account: Account[]) => void,\n  setAccountReadOnly: (readOnly?: boolean) => void\n) => {\n  if (accountRulesContract === undefined) {\n    setAccountList([]);\n    setAccountReadOnly(undefined);\n  } else {\n    accountRulesContract.functions.isReadOnly().then(isReadOnly => setAccountReadOnly(isReadOnly));\n    accountRulesContract.functions.getSize().then(listSize => {\n      const listElementsPromises = [];\n      for (let i = 0; listSize.gt(i); i++) {\n        listElementsPromises.push(accountRulesContract.functions.getByIndex(i));\n      }\n      Promise.all(listElementsPromises).then(responses => {\n        setAccountList(responses.map(address => ({ address })));\n      });\n    });\n  }\n};\n\n/**\n * Provider for the data context that contains the account list\n * @param {Object} props Props given to the AccountDataProvider\n * @return The provider with the following value:\n *  - accountList: list of permitted accounts from Account Rules contract\n *  - setAccountList: setter for the allowlist state\n */\nexport const AccountDataProvider: React.FC<{}> = props => {\n  const [accountList, setAccountList] = useState<Account[]>([]);\n  const [accountReadOnly, setAccountReadOnly] = useState<boolean | undefined>(undefined);\n  const [accountRulesContract, setAccountRulesContract] = useState<AccountRules | undefined>(undefined);\n\n  const value = useMemo(\n    () => ({\n      accountList: accountList,\n      setAccountList: setAccountList,\n      accountReadOnly,\n      setAccountReadOnly,\n      accountRulesContract,\n      setAccountRulesContract\n    }),\n    [accountList, setAccountList, accountReadOnly, setAccountReadOnly, accountRulesContract, setAccountRulesContract]\n  );\n\n  const { accountIngressContract } = useNetwork();\n\n  useEffect(() => {\n    if (accountIngressContract === undefined) {\n      setAccountRulesContract(undefined);\n    } else {\n      accountRulesFactory(accountIngressContract).then(contract => {\n        setAccountRulesContract(contract);\n        contract.removeAllListeners('AccountAdded');\n        contract.removeAllListeners('AccountRemoved');\n        contract.on('AccountAdded', (success, account, event) => {\n          if (success) {\n            loadAccountData(contract, setAccountList, setAccountReadOnly);\n          }\n        });\n        contract.on('AccountRemoved', (success, account, event) => {\n          if (success) {\n            loadAccountData(contract, setAccountList, setAccountReadOnly);\n          }\n        });\n      });\n    }\n  }, [accountIngressContract, setAccountList, setAccountReadOnly]);\n\n  return <AccountDataContext.Provider value={value} {...props} />;\n};\n\n/**\n * Fetch the appropriate account data on chain and synchronize with it\n * @return {Object} Contains data of interest:\n *  - dataReady: true if isReadOnly and account allowlist are correctly fetched,\n *  false otherwise\n *  - userAddress: Address of the user\n *  - isReadOnly: Account contract is lock or unlock,\n *  - allowlist: list of permitted accounts from Account contract,\n */\nexport const useAccountData = () => {\n  const context = useContext(AccountDataContext);\n\n  if (!context) {\n    throw new Error('useAccountData must be used within an AccountDataProvider.');\n  }\n\n  const { accountList, setAccountList, accountReadOnly, setAccountReadOnly, accountRulesContract } = context;\n\n  useEffect(() => {\n    loadAccountData(accountRulesContract, setAccountList, setAccountReadOnly);\n  }, [accountRulesContract, setAccountList, setAccountReadOnly]);\n\n  const formattedAccountList = useMemo(() => {\n    return accountList\n      .map(account => ({\n        ...account,\n        identifier: account.address.toLowerCase(),\n        status: 'active'\n      }))\n      .reverse();\n  }, [accountList]);\n\n  const dataReady = useMemo(() => {\n    return accountRulesContract !== undefined && accountReadOnly !== undefined && accountList !== undefined;\n  }, [accountRulesContract, accountReadOnly, accountList]);\n\n  return {\n    dataReady,\n    allowlist: formattedAccountList,\n    isReadOnly: accountReadOnly,\n    accountRulesContract\n  };\n};\n","import { Contract } from 'ethers';\nimport AdminAbi from '../abis/Admin.json';\nimport { AccountIngress } from '../@types/AccountIngress';\nimport { NodeIngress } from '../@types/NodeIngress';\nimport { Admin } from '../@types/Admin';\n\nlet instance: Admin | null = null;\n\nexport const adminFactory = async (ingressInstance: AccountIngress | NodeIngress) => {\n  if (instance) return instance;\n\n  const adminContractName = await ingressInstance.functions.ADMIN_CONTRACT();\n  const adminAddress = await ingressInstance.functions.getContractAddress(adminContractName);\n\n  instance = new Contract(adminAddress, AdminAbi.abi, ingressInstance.signer) as Admin;\n  return instance;\n};\n","// Libs\nimport React, { createContext, useContext, useMemo, useState, useEffect } from 'react';\nimport { Admin } from '../chain/@types/Admin';\nimport { adminFactory } from '../chain/contracts/Admin';\nimport { useNetwork } from './network';\nimport { listenForAccountChange } from '../chain/provider';\n\ntype ContextType =\n  | {\n      admins?: string[];\n      setAdmins: (admins: string[] | undefined) => void;\n      adminContract?: Admin;\n      setAdminContract: React.Dispatch<React.SetStateAction<Admin | undefined>>;\n      userAddress?: string;\n      setUserAddress: React.Dispatch<React.SetStateAction<string | undefined>>;\n    }\n  | undefined;\n\nconst AdminDataContext = createContext<ContextType>(undefined);\n\nconst loadAdminData = (adminContract: Admin | undefined, setAdmins: (admins: string[] | undefined) => void) => {\n  if (adminContract === undefined) {\n    setAdmins(undefined);\n  } else {\n    adminContract.functions.getAdmins().then(admins => {\n      setAdmins(admins);\n    });\n  }\n};\n\n/**\n * Provider for the data context that contains the Admin list\n * @param {Object} props Props given to the AdminDataProvider\n * @return The provider with the following value:\n *  - admins: list of Admin accounts from Admin Rules contract\n *  - setAdmins: setter for the Admin list state\n */\nexport const AdminDataProvider: React.FC = (props: React.Props<{}>) => {\n  const [admins, setAdmins] = useState<string[] | undefined>(undefined);\n  const [adminContract, setAdminContract] = useState<Admin | undefined>(undefined);\n  const [userAddress, setUserAddress] = useState<string | undefined>(undefined);\n\n  const value = useMemo(() => ({ admins, setAdmins, adminContract, setAdminContract, userAddress, setUserAddress }), [\n    admins,\n    setAdmins,\n    adminContract,\n    setAdminContract,\n    userAddress,\n    setUserAddress\n  ]);\n\n  const { accountIngressContract, nodeIngressContract } = useNetwork();\n\n  useEffect(() => {\n    const ingressContract = accountIngressContract || nodeIngressContract;\n    if (ingressContract === undefined) {\n      setAdminContract(undefined);\n      setUserAddress(undefined);\n    } else {\n      adminFactory(ingressContract).then(contract => {\n        setAdminContract(contract);\n        contract.removeAllListeners('AdminAdded');\n        contract.removeAllListeners('AdminRemoved');\n        contract.on('AdminAdded', (success, account, message, event) => {\n          if (success) loadAdminData(contract, setAdmins);\n        });\n        contract.on('AdminRemoved', (success, account, event) => {\n          if (success) loadAdminData(contract, setAdmins);\n        });\n      });\n      ingressContract.signer.getAddress().then(setUserAddress);\n    }\n  }, [accountIngressContract, nodeIngressContract, setAdmins, setUserAddress]);\n\n  useEffect(() => {\n    listenForAccountChange(setUserAddress);\n  }, [setUserAddress]);\n\n  return <AdminDataContext.Provider value={value} {...props} />;\n};\n\n/**\n * Fetch the appropriate Admin data on chain and synchronize with it\n * @return {Object} Contains data of interest:\n *  - dataReady: true if Admin list has been correctly fetched,\n *  false otherwise\n *  - userAddress: Address of the user\n *  - isAdmin: user is an Admin,\n *  - allowlist: list of admin accounts from Admin contract,\n */\nexport const useAdminData = () => {\n  const context = useContext(AdminDataContext);\n\n  if (!context) {\n    throw new Error('useAdminData must be used within an AdminDataProvider.');\n  }\n\n  const { admins, setAdmins, adminContract, userAddress } = context;\n\n  useEffect(() => {\n    loadAdminData(adminContract, setAdmins);\n  }, [adminContract, setAdmins]);\n\n  const formattedAdmins = useMemo(() => {\n    return admins\n      ? admins\n          .map(address => ({\n            address,\n            identifier: address.toLowerCase(),\n            status: 'active'\n          }))\n          .reverse()\n      : undefined;\n  }, [admins]);\n\n  const dataReady = useMemo(() => adminContract !== undefined && admins !== undefined && userAddress !== undefined, [\n    adminContract,\n    admins,\n    userAddress\n  ]);\n\n  const isAdmin = useMemo(() => (dataReady && admins ? admins.includes(userAddress!) : false), [\n    dataReady,\n    admins,\n    userAddress\n  ]);\n\n  return {\n    dataReady,\n    userAddress,\n    isAdmin,\n    admins: formattedAdmins,\n    adminContract\n  };\n};\n","import { Contract } from 'ethers';\nimport NodeRulesAbi from '../abis/NodeRules.json';\nimport { NodeIngress } from '../@types/NodeIngress';\nimport { NodeRules } from '../@types/NodeRules';\n\nlet instance: NodeRules | null = null;\n\nexport const nodeRulesFactory = async (ingressInstance: NodeIngress) => {\n  if (instance) return instance;\n\n  const ruleContractName = await ingressInstance.functions.RULES_CONTRACT();\n  const nodeRulesAddress = await ingressInstance.functions.getContractAddress(ruleContractName);\n\n  instance = new Contract(nodeRulesAddress, NodeRulesAbi.abi, ingressInstance.signer) as NodeRules;\n  return instance;\n};\n","export type Enode = {\n  enodeId: string;\n  ip: string;\n  port: string;\n};\n\nexport const enodeToParams = (enodeURL: string) => {\n  let enodeId = '';\n  let ip = '';\n  let port = '';\n  let extraParams = new Map();\n\n  try {\n    const node = new URL(enodeURL);\n    if (node.protocol === 'enode:') {\n      // Change to Special protocol in order to parse the fields properly\n      node.protocol = 'https';\n\n      if (node.username.length === 128) {\n        enodeId = node.username;\n      }\n      ip = node.hostname;\n      port = node.port;\n\n      node.searchParams.forEach((value, name, searchParams) => {\n        extraParams.set(name.toLowerCase(), value);\n      });\n    }\n  } catch (err) {}\n\n  return {\n    enodeId,\n    ip,\n    port,\n    extraParams\n  };\n};\n\nexport const paramsToIdentifier = ({ enodeId, ip, port }: { enodeId: string; ip: string; port: string }) => {\n  return `${enodeId}_${ip}_${port}`;\n};\n\nexport const identifierToParams = (identifier: string) => {\n  const [enodeId, ip, port] = identifier.split('_');\n  return {\n    enodeId,\n    ip,\n    port,\n    identifier\n  };\n};\n\nexport const identifierToEnodeId = (identifier: string) => {\n  if (identifier) {\n    const [enodeId] = identifier.split('_');\n    return `${enodeId}`;\n  }\n  return '';\n};\n\nexport const isValidEnode = (str: string) => {\n  return !Object.values(enodeToParams(str)).some(value => !value);\n};\n\nexport const isEqual = (node1: Enode, node2: Enode) => {\n  return (\n    node1.enodeId.toLowerCase() === node2.enodeId.toLowerCase() && node1.ip === node2.ip && node1.port === node2.port\n  );\n};\n","// Libs\nimport React, { createContext, useContext, useEffect, useState, useMemo } from 'react';\nimport { NodeRules } from '../chain/@types/NodeRules';\nimport { nodeRulesFactory } from '../chain/contracts/NodeRules';\nimport { useNetwork } from './network';\n\n// Utils\nimport { paramsToIdentifier, Enode as RawEnode } from '../util/enodetools';\n\ntype Enode = RawEnode & { identifier: string };\n\ntype ContextType =\n  | {\n      nodeList: Enode[];\n      setNodeList: React.Dispatch<React.SetStateAction<Enode[]>>;\n      nodeReadOnly?: boolean;\n      setNodeReadOnly: React.Dispatch<React.SetStateAction<boolean | undefined>>;\n      nodeRulesContract?: NodeRules;\n      setNodeRulesContract: React.Dispatch<React.SetStateAction<NodeRules | undefined>>;\n    }\n  | undefined;\n\nconst DataContext = createContext<ContextType>(undefined);\n\nconst loadNodeData = (\n  nodeRulesContract: NodeRules | undefined,\n  setNodeList: (account: Enode[]) => void,\n  setNodeReadOnly: (readOnly?: boolean) => void\n) => {\n  if (nodeRulesContract === undefined) {\n    setNodeList([]);\n    setNodeReadOnly(undefined);\n  } else {\n    nodeRulesContract.functions.isReadOnly().then(isReadOnly => setNodeReadOnly(isReadOnly));\n    nodeRulesContract.functions.getSize().then(listSize => {\n      const listElementPromises = [];\n      for (let i = 0; listSize.gt(i); i++) {\n        listElementPromises.push(nodeRulesContract.functions.getByIndex(i));\n      }\n      Promise.all(listElementPromises).then(responses => {\n        const updatedNodeList = responses.map(r => {\n          const withStringyPort = { ...r, port: r.port.toString() };\n          return {\n            ...withStringyPort,\n            identifier: paramsToIdentifier(withStringyPort)\n          };\n        });\n        setNodeList(updatedNodeList);\n      });\n    });\n  }\n};\n\n/**\n * Provider for the data context that contains the node list\n * @param {Object} props Props given to the NodeDataProvider\n * @return The provider with the following value:\n *  - nodeList: list of whiteliist enode from Node Rules contract\n *  - setNodeList: setter for the list state\n */\nexport const NodeDataProvider: React.FC<{}> = props => {\n  const [nodeList, setNodeList] = useState<Enode[]>([]);\n  const [nodeReadOnly, setNodeReadOnly] = useState<boolean | undefined>(undefined);\n  const [nodeRulesContract, setNodeRulesContract] = useState<NodeRules | undefined>(undefined);\n\n  const value = useMemo(\n    () => ({ nodeList, setNodeList, nodeReadOnly, setNodeReadOnly, nodeRulesContract, setNodeRulesContract }),\n    [nodeList, setNodeList, nodeReadOnly, setNodeReadOnly, nodeRulesContract, setNodeRulesContract]\n  );\n\n  const { nodeIngressContract } = useNetwork();\n\n  useEffect(() => {\n    if (nodeIngressContract === undefined) {\n      setNodeRulesContract(undefined);\n    } else {\n      nodeRulesFactory(nodeIngressContract).then(contract => {\n        setNodeRulesContract(contract);\n        contract.removeAllListeners('NodeAdded');\n        contract.removeAllListeners('NodeRemoved');\n        contract.on('NodeAdded', () => {\n          loadNodeData(contract, setNodeList, setNodeReadOnly);\n        });\n        contract.on('NodeRemoved', () => {\n          loadNodeData(contract, setNodeList, setNodeReadOnly);\n        });\n      });\n    }\n  }, [nodeIngressContract]);\n\n  return <DataContext.Provider value={value} {...props} />;\n};\n\n/**\n * Fetch the appropriate node data on chain and synchronize with it\n * @return {Object} Contains data of interest:\n *  - dataReady: true if isReadOnly and node allowlist are correctly fetched,\n *  false otherwise\n *  - userAddress: Address of the user\n *  - isReadOnly: Node contract is lock or unlock,\n *  - allowlist: list of permitted nodes from Node contract,\n */\nexport const useNodeData = () => {\n  const context = useContext(DataContext);\n  if (!context) {\n    throw new Error('useNodeData must be used within a NodeDataProvider.');\n  }\n\n  const { nodeList, setNodeList, nodeReadOnly, setNodeReadOnly, nodeRulesContract } = context;\n\n  useEffect(() => {\n    loadNodeData(nodeRulesContract, setNodeList, setNodeReadOnly);\n  }, [nodeRulesContract, setNodeList, setNodeReadOnly]);\n\n  const formattedNodeList = useMemo(() => {\n    return nodeList.map(enode => ({ ...enode, status: 'active' })).reverse();\n  }, [nodeList]);\n\n  const dataReady = useMemo(() => {\n    return nodeRulesContract !== undefined && nodeReadOnly !== undefined && nodeList !== undefined;\n  }, [nodeRulesContract, nodeReadOnly, nodeList]);\n\n  return {\n    dataReady,\n    allowlist: formattedNodeList,\n    isReadOnly: nodeReadOnly,\n    nodeRulesContract\n  };\n};\n","export const ADMIN_TAB = 'adminTab';\nexport const ENODE_TAB = 'enodeTab';\nexport const ACCOUNT_TAB = 'accountTab';\nexport default [\n  { id: ACCOUNT_TAB, text: 'Accounts' },\n  { id: ENODE_TAB, text: 'Nodes' },\n  { id: ADMIN_TAB, text: 'Admins' }\n];\n","// Libs\nimport React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Rimble Components\nimport { Flex, Box, Text } from 'rimble-ui';\n// Constants\nimport tabs from '../../constants/tabs';\n// Styles\nimport styles from './styles.module.scss';\n\ntype TabSelector = {\n  tab: string;\n  setTab: (tab: string) => void;\n};\n\nconst TabSelector: React.FC<TabSelector> = ({ tab, setTab }) => (\n  <Flex height=\"33px\" className={styles.choicesContainer}>\n    {tabs.map(({ id, text }) => (\n      <Box\n        key={id}\n        className={tab === id ? `${styles.selected} ${styles.choiceBox}` : styles.choiceBox}\n        width=\"200px\"\n        px={3}\n        onClick={() => setTab(id)}\n      >\n        <Text fontWeight=\"600\" textAlign=\"center\">\n          {text}\n        </Text>\n      </Box>\n    ))}\n  </Flex>\n);\n\nTabSelector.propTypes = {\n  setTab: PropTypes.func.isRequired,\n  tab: PropTypes.string.isRequired\n};\n\nexport default memo(TabSelector);\n","// Libs\nimport React, { useContext, useState, createContext, useMemo, useCallback } from 'react';\n// Hooks\nimport useTimeout from './useTimeout';\n\nexport type Toast = {\n  identifier: string;\n  status: string;\n  message: string;\n  secondaryMessage?: string;\n};\n\nconst ToastContext = createContext<{\n  toasts?: Toast[];\n  setToasts?: React.Dispatch<React.SetStateAction<Toast[]>>;\n}>({});\n\n/**\n * Provider for the current state of the toasts\n * @param {Object} props Props given to the ToastProvider\n * @return The provider with the following value:\n *  - toasts: Array of opened toasts\n *  - setToasts: setter of toasts\n */\nexport const ToastProvider: React.FC<{}> = props => {\n  const [toasts, setToasts] = useState<Toast[]>([]);\n\n  const value = useMemo(() => ({ toasts, setToasts }), [toasts, setToasts]);\n\n  return <ToastContext.Provider value={value} {...props} />;\n};\n\n/**\n * Synchronize with the toasts state\n * @return {Object} The toasts informations and the associated setters:\n *  - toasts: Array of opened toasts\n *  - openToast: Function that creates a toast and deletes it later\n *  - updateToast: Function that updates a toast\n *  - closeToast: Function that deletes the toast\n */\nexport const useToast = () => {\n  const context = useContext(ToastContext);\n  if (!context) {\n    throw new Error('useToast must be used within a DataProvider.');\n  }\n\n  const { addTimeout } = useTimeout();\n\n  const { toasts: toastsOpt, setToasts } = context;\n  const toasts = toastsOpt!;\n\n  const closeToast = useCallback(\n    (targetedIdentifier: string) => () => {\n      setToasts!(toasts => {\n        const updatedToasts = [...toasts];\n        const index = updatedToasts.findIndex(({ identifier }) => identifier === targetedIdentifier);\n        updatedToasts.splice(index, 1);\n        return updatedToasts;\n      });\n    },\n    [setToasts]\n  );\n\n  const openToast = useCallback(\n    (identifier: string, status: string, message: string, secondaryMessage?: string, timeout: number = 5000) => {\n      const timeoutId = setTimeout(closeToast(identifier), timeout);\n      closeToast(identifier)();\n      setToasts!(toasts => [...toasts, { identifier, status, message, secondaryMessage }]);\n      addTimeout(timeoutId);\n    },\n    [addTimeout, closeToast, setToasts]\n  );\n\n  const updateToast = useCallback(\n    (\n      targetedIdentifier: string,\n      status: string,\n      message: string,\n      secondaryMessage?: string,\n      timeout: number = 5000\n    ) => {\n      setToasts!(toasts => {\n        const updatedToasts = [...toasts];\n        const index = updatedToasts.findIndex(({ identifier }) => identifier === targetedIdentifier);\n        if (index !== -1) {\n          updatedToasts.splice(index, 1);\n        }\n        return [\n          ...updatedToasts,\n          {\n            identifier: targetedIdentifier,\n            status,\n            message,\n            secondaryMessage\n          }\n        ];\n      });\n      const timeoutId = setTimeout(closeToast(targetedIdentifier), timeout);\n      addTimeout(timeoutId);\n    },\n    [addTimeout, closeToast, setToasts]\n  );\n\n  return {\n    toasts,\n    openToast,\n    updateToast,\n    closeToast\n  };\n};\n","// Libs\nimport { useState, useEffect, useCallback } from 'react';\n\n/**\n * Allows to clear timeouts when component unmounts\n * @return {Object} Contains:\n *  - addTimeout: Function that adds a timeoutId to be cleared\n */\nexport default () => {\n  const [timeouts, setTimeouts] = useState<number[]>([]);\n\n  useEffect(\n    () => () => {\n      timeouts.forEach(timeoutId => clearTimeout(timeoutId));\n    },\n    [timeouts]\n  );\n\n  const addTimeout = useCallback(timeoutId => setTimeouts(timeouts => [...timeouts, timeoutId]), [setTimeouts]);\n\n  return { addTimeout };\n};\n","// Libs\nimport React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Rimble Components\nimport { ToastMessage } from 'rimble-ui';\n// Styles\nimport styles from './styles.module.scss';\n\ntype PendingToast = {\n  message: string;\n  closeToast: () => void;\n};\n\nconst PendingToast: React.FC<PendingToast> = ({ message, closeToast }) => (\n  <ToastMessage.Processing\n    minWidth=\"300px\"\n    zIndex=\"2\"\n    message={message}\n    closeElem\n    closeFunction={closeToast}\n    className={styles.fadeIn}\n  />\n);\n\nPendingToast.propTypes = {\n  message: PropTypes.string.isRequired,\n  closeToast: PropTypes.func.isRequired\n};\n\nexport default memo(PendingToast);\n","// Libs\nimport React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Rimble Components\nimport { ToastMessage } from 'rimble-ui';\n// Styles\nimport styles from './styles.module.scss';\n\ntype ErrorToast = {\n  message: string;\n  secondaryMessage?: string;\n  closeToast: () => void;\n};\n\nconst ErrorToast: React.FC<ErrorToast> = ({ message, secondaryMessage, closeToast }) => (\n  <ToastMessage.Failure\n    minWidth=\"300px\"\n    zIndex=\"2\"\n    message={message}\n    secondaryMessage={secondaryMessage}\n    closeElem\n    closeFunction={closeToast}\n    className={styles.fadeInOut}\n  />\n);\n\nErrorToast.propTypes = {\n  message: PropTypes.string.isRequired,\n  secondaryMessage: PropTypes.string,\n  closeToast: PropTypes.func.isRequired\n};\n\nexport default memo(ErrorToast);\n","// Libs\nimport React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Rimble Components\nimport { ToastMessage } from 'rimble-ui';\n// Styles\nimport styles from './styles.module.scss';\n\ntype SuccessToast = {\n  message: string;\n  closeToast: () => void;\n};\n\nconst SuccessToast: React.FC<SuccessToast> = ({ message, closeToast }) => (\n  <ToastMessage.Success\n    bottom=\"0\"\n    postition=\"absolute\"\n    minWidth=\"300px\"\n    zIndex=\"2\"\n    message={message}\n    closeElem\n    closeFunction={closeToast}\n    className={styles.fadeInOut}\n  />\n);\n\nSuccessToast.propTypes = {\n  message: PropTypes.string.isRequired,\n  closeToast: PropTypes.func.isRequired\n};\n\nexport default memo(SuccessToast);\n","export const PENDING_ADDITION = 'pendingAddition';\nexport const FAIL_ADDITION = 'failAddition';\n\nexport const PENDING_REMOVAL = 'pendingRemoval';\nexport const FAIL_REMOVAL = 'failRemoval';\n\nexport const PENDING_LOCK = 'pendingLock';\n\nexport const PENDING = 'pendingTransaction';\nexport const SUCCESS = 'successTransaction';\nexport const FAIL = 'failTransaction';\n","// Libs\nimport React, { Fragment, memo } from 'react';\nimport PropTypes from 'prop-types';\n// Components\nimport PendingToast from './Pending';\nimport ErrorToast from './Error';\nimport SuccessToast from './Success';\n// Constants\nimport { PENDING, SUCCESS, FAIL } from '../../constants/transactions';\n// Rimble Components\nimport { Flex } from 'rimble-ui';\nimport { Toast } from '../../context/toasts';\n\ntype Toasts = {\n  toasts: Toast[];\n  closeToast: (identifier: string) => () => void;\n};\n\nconst Toasts: React.FC<Toasts> = ({ toasts, closeToast }) => (\n  <Flex position=\"absolute\" bottom=\"50px\" right=\"50px\" flexDirection=\"column\">\n    {toasts.map(({ status, identifier, ...messages }, index) => (\n      <Fragment key={index}>\n        {status === PENDING && <PendingToast {...messages} closeToast={closeToast(identifier)} />}\n        {status === FAIL && <ErrorToast {...messages} closeToast={closeToast(identifier)} />}\n        {status === SUCCESS && <SuccessToast {...messages} closeToast={closeToast(identifier)} />}\n      </Fragment>\n    ))}\n  </Flex>\n);\n\nToasts.propTypes = {\n  toasts: PropTypes.array.isRequired,\n  closeToast: PropTypes.func.isRequired\n};\n\nexport default memo(Toasts);\n","// Libs\nimport React from 'react';\n// Context\nimport { useToast } from '../../context/toasts';\n// Component\nimport Toasts from '../../components/Toasts/Toasts';\n\nconst ToastsContainer: React.FC<{}> = () => {\n  const { toasts, closeToast } = useToast();\n  return <Toasts toasts={toasts} closeToast={closeToast} />;\n};\n\nexport default ToastsContainer;\n","// Libs\nimport { useState, useEffect } from 'react';\n// Hooks\nimport useModal from './useModal';\nimport { useToast } from '../../context/toasts';\nimport useTransaction from './useTransaction';\n// Utils\nimport { arrayInclude, areArrayEqual, areMapEqual } from '../../util/array';\n// Constants\nimport { PENDING_ADDITION, PENDING_REMOVAL, FAIL_ADDITION, FAIL_REMOVAL } from '../../constants/transactions';\n\ntype IdentAndStatus = {\n  identifier: string;\n  status: string;\n};\n\nexport default <T>(originalList: (T & IdentAndStatus)[], identifierToParams: (identifier: string) => T) => {\n  const [list, setList] = useState(originalList);\n  const { modals, toggleModal } = useModal();\n  const { transactions, addTransaction, updateTransaction, deleteTransaction, setTransactions } = useTransaction();\n  const { openToast, updateToast, closeToast } = useToast();\n\n  useEffect(() => {\n    const updatedTransactions = new Map(transactions);\n    // Delete old pending removals\n    transactions.forEach((status, identifier) => {\n      if (status === PENDING_REMOVAL && !arrayInclude(originalList, { identifier })) {\n        updatedTransactions.delete(identifier);\n      }\n    });\n    // Derive list and delete old pending additions\n    const derivedList = originalList.map(i => {\n      if (updatedTransactions.has(i.identifier)) {\n        const status = updatedTransactions.get(i.identifier)!;\n        if (\n          status === PENDING_ADDITION ||\n          (status === FAIL_ADDITION && i.status === 'active') ||\n          (status === FAIL_REMOVAL && i.status === 'active')\n        ) {\n          updatedTransactions.delete(i.identifier);\n        } else {\n          return { ...i, status };\n        }\n      }\n      return i;\n    });\n    // Gather the pending and failed additions from updatedTransactions\n    const pending: (T & IdentAndStatus)[] = [];\n    updatedTransactions.forEach((status, identifier) => {\n      if (status === PENDING_ADDITION || status === FAIL_ADDITION) {\n        pending.push({\n          identifier,\n          status,\n          ...identifierToParams(identifier)\n        });\n      }\n    });\n\n    const updatedList = [...pending, ...derivedList];\n\n    if (!areArrayEqual(updatedList, list, ['identifier', 'status'])) {\n      setList(updatedList);\n    }\n    if (!areMapEqual(updatedTransactions, transactions)) {\n      setTransactions(updatedTransactions);\n    }\n  }, [transactions, originalList, list, identifierToParams, setTransactions, deleteTransaction]);\n\n  return {\n    list,\n    modals,\n    toggleModal,\n    transactions,\n    addTransaction,\n    updateTransaction,\n    deleteTransaction,\n    openToast,\n    updateToast,\n    closeToast\n  };\n};\n","// Libs\nimport { useState, useCallback } from 'react';\n\nexport default () => {\n  const [modals, setModals] = useState<{\n    add: boolean;\n    remove: string;\n    lock: boolean;\n  }>({\n    add: false,\n    remove: '',\n    lock: false\n  });\n\n  const toggleModal = useCallback(\n    (modal: 'add' | 'remove' | 'lock') => (value?: string | boolean) => {\n      setModals(modals => ({\n        ...modals,\n        [modal]: value ? value : !modals[modal]\n      }));\n    },\n    [setModals]\n  );\n\n  return { modals, toggleModal };\n};\n","// Libs\nimport { useState, useCallback } from 'react';\n\nexport default () => {\n  const [transactions, setTransactions] = useState(new Map<string, string>());\n\n  const addTransaction = useCallback((identifier: string, status: string) => {\n    setTransactions(transactions => {\n      const updatedTransactions = new Map(transactions);\n      updatedTransactions.set(identifier, status);\n      return updatedTransactions;\n    });\n  }, []);\n\n  const updateTransaction = useCallback((identifier: string, status: string) => addTransaction(identifier, status), [\n    addTransaction\n  ]);\n\n  const deleteTransaction = useCallback((identifier: string) => {\n    setTransactions(transactions => {\n      const updatedTransactions = new Map(transactions);\n      updatedTransactions.delete(identifier);\n      return updatedTransactions;\n    });\n  }, []);\n\n  return {\n    transactions,\n    addTransaction,\n    updateTransaction,\n    deleteTransaction,\n    setTransactions\n  };\n};\n","export const areArrayEqual = (arr1: Array<any>, arr2: Array<any>, searchingKeys: Array<string>) => {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  let index = 0;\n  let isSimilar = true;\n  while (isSimilar && index < arr1.length) {\n    if (searchingKeys) {\n      isSimilar = searchingKeys.reduce<boolean>(\n        (acc, key) => acc && arr1[index][key] === arr2[index][key], // eslint-disable-line\n        true\n      );\n    } else {\n      isSimilar = arr1[index] === arr2[index];\n    }\n    index++;\n  }\n  return isSimilar;\n};\n\nexport const arrayInclude = (arr: Array<any>, searchingObject: Object) =>\n  arr.some(element => {\n    return Object.entries(searchingObject).reduce<boolean>((acc, [key, value]) => acc && element[key] === value, true);\n  });\n\nexport const areMapEqual = (map1: Map<any, any>, map2: Map<any, any>) => {\n  if (map1.size !== map2.size) {\n    return false;\n  }\n  let isSimilar = true;\n  map1.forEach((value, key) => {\n    isSimilar = map2.has(key) && map2.get(key) === value;\n  });\n  return isSimilar;\n};\n","// Constants\nimport { FAIL } from '../constants/transactions';\n\nexport const errorToast = (\n  error: Error,\n  value: string,\n  openToast: (identifier: string, status: string, message: string) => void,\n  defaultToast: () => void\n) => {\n  if (error.message.includes('MetaMask Tx Signature: User denied transaction signature.')) {\n    openToast(value, FAIL, 'User rejected MetaMask transaction.');\n  } else {\n    defaultToast();\n  }\n};\n","// Libs\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// Rimble Components\nimport { Flex, Box, Heading, Button } from 'rimble-ui';\n\ntype TableHeader = {\n  number: Number;\n  openAddModal: () => void;\n  disabledAdd: boolean;\n};\n\nconst TableHeader: React.FC<TableHeader> = ({ number, openAddModal, disabledAdd }) => (\n  <Flex alignItems=\"center\" justifyContent=\"space-between\">\n    <Box display=\"flex\" alignItems=\"center\">\n      <Heading.h2 fontWeight=\"700\">Accounts ({number})</Heading.h2>\n    </Box>\n    <Flex alignItems=\"center\">\n      <Button icon=\"AddCircleOutline\" onClick={() => openAddModal()} disabled={disabledAdd}>\n        Add Account\n      </Button>\n    </Flex>\n  </Flex>\n);\n\nTableHeader.propTypes = {\n  number: PropTypes.number.isRequired,\n  openAddModal: PropTypes.func.isRequired,\n  disabledAdd: PropTypes.bool.isRequired\n};\n\nexport default TableHeader;\n","// Libs\nimport React from 'react';\nimport classnames from 'classnames';\n// Rimble Components\nimport { Tooltip, Text } from 'rimble-ui';\n// Constants\nimport { PENDING_ADDITION, PENDING_REMOVAL } from '../../constants/transactions';\n// Styles\nimport styles from './styles.module.scss';\n\ntype TextWithTooltip = {\n  status: string;\n  isAdmin: boolean;\n  text: string;\n};\n\nconst TextWithTooltip: React.FC<TextWithTooltip> = ({ status, isAdmin, text }) => {\n  return status === PENDING_ADDITION || status === PENDING_REMOVAL || !isAdmin ? (\n    <Tooltip\n      placement=\"center\"\n      message={isAdmin ? 'This transaction is pending.' : 'You must be an admin to perform modifications.'}\n      variant=\"dark\"\n    >\n      <Text\n        className={classnames(\n          styles.ellipsis,\n          status === PENDING_REMOVAL\n            ? styles.pendingRemoval\n            : status === PENDING_ADDITION\n            ? styles.pendingAddition\n            : styles.lock\n        )}\n        fontSize=\"14px\"\n      >\n        {text}\n      </Text>\n    </Tooltip>\n  ) : (\n    <Text className={styles.ellipsis} fontSize=\"14px\">\n      {text}\n    </Text>\n  );\n};\n\nexport default TextWithTooltip;\n","// Libs\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// Rimble Components\nimport { Pill, Flex, Button } from 'rimble-ui';\n// Constant\nimport { PENDING_ADDITION, PENDING_REMOVAL, FAIL_ADDITION, FAIL_REMOVAL } from '../../constants/transactions';\n// Components\nimport TextWithTooltip from './TextWithTooltip';\n// Styles\nimport styles from './styles.module.scss';\n\ntype AccountRow = {\n  address: string;\n  status: string;\n  isAdmin: boolean;\n  deleteTransaction: (address: string) => void;\n  openRemoveModal: (address: string) => void;\n};\n\nconst AccountRow: React.FC<AccountRow> = ({ address, status, isAdmin, deleteTransaction, openRemoveModal }) => (\n  <tr className={styles.row}>\n    <td>\n      <Flex alignItems=\"center\" className={styles.tooltipFix}>\n        <TextWithTooltip status={status} text={address} isAdmin={isAdmin} />\n      </Flex>\n    </td>\n    <td>\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        {status === 'active' ? (\n          <Pill color=\"#018002\" className={styles.pill}>\n            Active\n          </Pill>\n        ) : status === PENDING_ADDITION ? (\n          <Pill color=\"#FFA505\" className={styles.pill}>\n            Pending Addition\n          </Pill>\n        ) : status === PENDING_REMOVAL ? (\n          <Pill color=\"#FFA505\" className={styles.pill}>\n            Pending Removal\n          </Pill>\n        ) : status === FAIL_ADDITION ? (\n          <Flex>\n            <Pill color=\"#FF1C1E\" className={styles.pill}>\n              Addition Failed\n            </Pill>\n            <Pill color=\"green\" ml={2} className={styles.pill} onClick={() => deleteTransaction(address)}>\n              Clear\n            </Pill>\n          </Flex>\n        ) : status === FAIL_REMOVAL ? (\n          <Flex>\n            <Pill color=\"#FF1C1E\" className={styles.pill}>\n              Removal Failed\n            </Pill>\n            <Pill color=\"green\" ml={2} className={styles.pill} onClick={() => deleteTransaction(address)}>\n              Clear\n            </Pill>\n          </Flex>\n        ) : (\n          <div />\n        )}\n        {isAdmin && status === 'active' && (\n          <Button.Text\n            mainColor=\"#CCC\"\n            icon=\"Delete\"\n            icononly\n            className={styles.removeIcon}\n            onClick={() => openRemoveModal(address)}\n          />\n        )}\n      </Flex>\n    </td>\n  </tr>\n);\n\nAccountRow.propTypes = {\n  address: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n  isAdmin: PropTypes.bool.isRequired,\n  deleteTransaction: PropTypes.func.isRequired,\n  openRemoveModal: PropTypes.func.isRequired\n};\n\nexport default AccountRow;\n","// Libs\nimport React from 'react';\n// Styles\nimport styles from './styles.module.scss';\n\nconst EmptyRow: React.FC<{}> = () => (\n  <tr>\n    <td colSpan={2} className={styles.emptyLine}>\n      No accounts have been added.\n    </td>\n  </tr>\n);\n\nexport default EmptyRow;\n","// Libs\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// Rimble Components\nimport { Table, Box } from 'rimble-ui';\n// Components\nimport AccountTableHeader from './TableHeader';\nimport AccountRow from './Row';\nimport EmptyRow from './EmptyRow';\n// Styles\nimport styles from './styles.module.scss';\n\ntype AccountTable = {\n  list: { address: string; status: string }[];\n  toggleModal: (name: 'add' | 'remove' | 'lock') => (value?: boolean | string) => void;\n  deleteTransaction: (identifier: string) => void;\n  isAdmin: boolean;\n  isReadOnly: boolean;\n};\n\nconst AccountTable: React.FC<AccountTable> = ({ list, toggleModal, deleteTransaction, isAdmin, isReadOnly }) => (\n  <Box mt={5}>\n    <AccountTableHeader\n      number={list.length}\n      openAddModal={() => toggleModal('add')(true)}\n      disabledAdd={!isAdmin || isReadOnly}\n    />\n    <Table mt={4}>\n      <thead>\n        <tr>\n          <th className={styles.headerCell}>Account Address</th>\n          <th className={styles.headerCell}>Status</th>\n        </tr>\n      </thead>\n      <tbody>\n        {list.map(({ address, status }) => (\n          <AccountRow\n            key={address}\n            address={address}\n            status={status}\n            isAdmin={isAdmin}\n            deleteTransaction={deleteTransaction}\n            openRemoveModal={toggleModal('remove')}\n          />\n        ))}\n        {list.length === 0 && <EmptyRow />}\n      </tbody>\n    </Table>\n  </Box>\n);\n\nAccountTable.propTypes = {\n  list: PropTypes.array.isRequired,\n  toggleModal: PropTypes.func.isRequired,\n  deleteTransaction: PropTypes.func.isRequired,\n  isAdmin: PropTypes.bool.isRequired,\n  isReadOnly: PropTypes.bool.isRequired\n};\n\nexport default AccountTable;\n","// Libs\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n// Rimble Components\nimport { Modal, Card, Button, Flex, Box, Heading, Form, Text } from 'rimble-ui';\n// Styles\nimport styles from './styles.module.scss';\nimport { ModalDisplay } from '../../constants/modals';\n\nconst AddModal: React.FC<{\n  input: string;\n  validationResult: { valid: boolean; msg?: string };\n  modifyInput: (input: { target: { value: string } }) => void;\n  handleSubmit: (e: Event) => void;\n  isOpen: boolean;\n  closeModal: (e: Event) => void;\n  display: ModalDisplay;\n}> = ({ input, validationResult, modifyInput, handleSubmit, isOpen, closeModal, display }) => (\n  <Modal isOpen={isOpen}>\n    <Card width={'700px'} p={0}>\n      <Button.Text\n        icononly\n        icon={'Close'}\n        mainColor={'moon-gray'}\n        top={0}\n        right={0}\n        mt={3}\n        mr={3}\n        onClick={closeModal}\n        className={styles.closeIcon}\n      />\n      <Form onSubmit={handleSubmit}>\n        <Box p={4} mb={3}>\n          <Heading.h3>{display.heading}</Heading.h3>\n          <Text>{display.subHeading}</Text>\n          <Form.Field\n            mt={3}\n            label={display.label}\n            className={input ? `${validationResult.valid ? styles.validField : styles.invalidField}` : null}\n          >\n            <Form.Input\n              width={1}\n              type=\"text\"\n              name=\"input\"\n              placeholder={display.inputPlaceholder}\n              value={input}\n              onChange={modifyInput}\n              className={styles.fieldInput}\n              required\n            />\n          </Form.Field>\n          <Text\n            color=\"red\"\n            height=\"30px\"\n            fontSize=\"14px\"\n            className={\n              !validationResult.valid && input ? classnames(styles.errorMessage, styles.show) : styles.errorMessage\n            }\n          >\n            {validationResult.msg ? validationResult.msg : display.errorMessage}\n          </Text>\n        </Box>\n        <Flex px={4} py={3} borderTop={1} borderStyle={'solid'} borderColor={'#E8E8E8'} justifyContent={'flex-end'}>\n          <Button.Outline type=\"button\" mainColor=\"black\" onClick={closeModal}>\n            Cancel\n          </Button.Outline>\n          <Button\n            type=\"submit\"\n            ml={3}\n            color=\"white\"\n            bg=\"protocol\"\n            hovercolor=\"#25D78F\"\n            border={1}\n            onClick={handleSubmit}\n            disabled={!validationResult.valid}\n          >\n            {display.submitText}\n          </Button>\n        </Flex>\n      </Form>\n    </Card>\n  </Modal>\n);\n\nAddModal.propTypes = {\n  input: PropTypes.string.isRequired,\n  validationResult: PropTypes.any.isRequired,\n  modifyInput: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  closeModal: PropTypes.func.isRequired,\n  display: PropTypes.any.isRequired\n};\n\nexport default AddModal;\n","// Libs\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Components\nimport AddModal from '../../components/Modals/Add';\nimport { ModalDisplay } from '../../constants/modals';\n\nconst AddModalContainer: React.FC<{\n  isOpen: boolean;\n  closeModal: () => void;\n  handleAdd: (input: string) => void;\n  isValid: (value: string) => { valid: boolean; msg?: string };\n  display: ModalDisplay;\n}> = ({ isOpen, closeModal, handleAdd, isValid, display }) => {\n  const [input, setInput] = useState('');\n  const [validation, setValidation] = useState({ valid: false });\n\n  const modifyInput = ({ target: { value } }: { target: { value: string } }) => {\n    const validation = isValid(value);\n    setInput(value);\n    setValidation(validation);\n  };\n\n  const handleSubmit = (e: Event) => {\n    e.preventDefault();\n    setInput('');\n    setValidation({ valid: false });\n    handleAdd(input);\n  };\n\n  const handleClose = (e: Event) => {\n    e.preventDefault();\n    setInput('');\n    setValidation({ valid: false });\n    closeModal();\n  };\n\n  return (\n    <AddModal\n      input={input}\n      validationResult={validation}\n      modifyInput={modifyInput}\n      handleSubmit={handleSubmit}\n      isOpen={isOpen}\n      closeModal={handleClose}\n      display={display}\n    />\n  );\n};\n\nAddModalContainer.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  closeModal: PropTypes.func.isRequired,\n  handleAdd: PropTypes.func.isRequired,\n  isValid: PropTypes.func.isRequired,\n  display: PropTypes.any.isRequired\n};\n\nexport default AddModalContainer;\n","// Libs\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// Rimble Components\nimport { Modal, Card, Button, Flex, Box, Heading, Text } from 'rimble-ui';\n// Styles\nimport styles from './styles.module.scss';\nimport { ModalDisplay } from '../../constants/modals';\n\nconst RemoveModal: React.FC<{\n  closeModal: (e: Event) => void;\n  isOpen: boolean;\n  handleSubmit: (e: Event) => void;\n  display: ModalDisplay;\n}> = ({ closeModal, isOpen, handleSubmit, display }) => (\n  <Modal isOpen={isOpen}>\n    <Card width={'700px'} p={0}>\n      <Button.Text\n        icononly\n        icon={'Close'}\n        mainColor={'moon-gray'}\n        top={0}\n        right={0}\n        mt={3}\n        mr={3}\n        onClick={closeModal}\n        className={styles.closeIcon}\n      />\n      <Box p={4} mb={3}>\n        <Heading.h3>{display.heading}</Heading.h3>\n        <Text className={styles.break}>{display.subHeading}</Text>\n      </Box>\n      <Flex px={4} py={3} borderTop={1} borderStyle={'solid'} borderColor={'#E8E8E8'} justifyContent={'flex-end'}>\n        <Button.Outline mainColor=\"black\" onClick={closeModal}>\n          Cancel\n        </Button.Outline>\n        <Button variant=\"danger\" ml={3} onClick={handleSubmit}>\n          Remove\n        </Button>\n      </Flex>\n    </Card>\n  </Modal>\n);\n\nRemoveModal.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  display: PropTypes.any.isRequired\n};\n\nexport default RemoveModal;\n","// Libs\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// Components\nimport RemoveModal from '../../components/Modals/Remove';\nimport { ModalDisplay } from '../../constants/modals';\n\nconst RemoveModalContainer: React.FC<{\n  isOpen: boolean;\n  closeModal: () => void;\n  handleRemove: (value: string | boolean) => void;\n  value: string | boolean;\n  display: ModalDisplay;\n}> = ({ isOpen, closeModal, handleRemove, value, display }) => {\n  const handleSubmit = (e: Event) => {\n    e.preventDefault();\n    handleRemove(value);\n  };\n\n  const handleClose = (e: Event) => {\n    e.preventDefault();\n    closeModal();\n  };\n\n  return <RemoveModal handleSubmit={handleSubmit} isOpen={isOpen} closeModal={handleClose} display={display} />;\n};\n\nRemoveModalContainer.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  closeModal: PropTypes.func.isRequired,\n  handleRemove: PropTypes.func.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]).isRequired,\n  display: PropTypes.any.isRequired\n};\n\nexport default RemoveModalContainer;\n","import { identifierToEnodeId } from '../util/enodetools';\n\nexport type ModalDisplay = {\n  heading: string;\n  subHeading: string;\n  label?: string;\n  inputPlaceholder?: string;\n  errorMessage?: string;\n  submitText?: string;\n};\n\nexport const addAdminDisplay: ModalDisplay = {\n  submitText: 'Add Admin Account',\n  errorMessage: 'Account address is not valid.',\n  inputPlaceholder: 'Ex: 0xAc03BB73b6a9e108530AFf4Df5077c2B3D481e5A',\n  label: 'Account Address',\n  heading: 'Add Admin Account',\n  subHeading: ''\n};\n\nexport const removeAdminDisplay: (value: string | boolean) => ModalDisplay = value => ({\n  heading: 'Are you sure?',\n  subHeading: `Remove “${value}” as an admin account?`\n});\n\nexport const addAccountDisplay: ModalDisplay = {\n  submitText: 'Add Account',\n  errorMessage: 'Account address is not valid.',\n  inputPlaceholder: 'Ex: 0xAc03BB73b6a9e108530AFf4Df5077c2B3D481e5A',\n  label: 'Account Address',\n  heading: 'Add Account',\n  subHeading: ''\n};\n\nexport const removeAccountDisplay: (value: string | boolean) => ModalDisplay = value => ({\n  heading: 'Are you sure?',\n  subHeading: `Remove account “${value}”?`\n});\n\nexport const addEnodeDisplay: ModalDisplay = {\n  submitText: 'Add Node',\n  errorMessage: 'Enode URL must include valid Node ID, IP address and Port.',\n  inputPlaceholder:\n    'Ex: enode://72b0d3ee9e86e072cca078b2588163bf8d9b85fa93923a31f4b97d13cf5280b3d32de9c13d4b7e3cc615d8c1347c97da760a689fac05d9ec80bda4517015ee78@127.0.0.1:30304',\n  label: 'Enode URL',\n  heading: 'Add Node',\n  subHeading: ''\n};\n\nexport const removeEnodeDisplay: (value: string) => ModalDisplay = value => ({\n  heading: 'Are you sure?',\n  subHeading: `Remove node “${identifierToEnodeId(value)}”?`\n});\n","// Libs\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n// Components\nimport AccountTable from './Table';\nimport AddModal from '../../containers/Modals/Add';\nimport RemoveModal from '../../containers/Modals/Remove';\n// Constants\nimport { addAccountDisplay, removeAccountDisplay } from '../../constants/modals';\n\ntype AccountTab = {\n  list: any[];\n  modals: {\n    add: boolean;\n    remove: boolean | string;\n    lock: boolean;\n  };\n  toggleModal: (name: 'add' | 'remove' | 'lock') => (value?: boolean | string) => void;\n  handleAdd: (value: any) => Promise<void>;\n  handleRemove: (value: any) => Promise<void>;\n  isAdmin: boolean;\n  deleteTransaction: (identifier: string) => void;\n  isValid: (address: string) => { valid: boolean };\n  isOpen: boolean;\n  isReadOnly: boolean;\n};\n\nconst AccountTab: React.FC<AccountTab> = ({\n  list,\n  modals,\n  toggleModal,\n  handleAdd,\n  handleRemove,\n  isAdmin,\n  deleteTransaction,\n  isValid,\n  isOpen,\n  isReadOnly\n}) => (\n  <Fragment>\n    {isOpen && (\n      <Fragment>\n        <AccountTable\n          list={list}\n          toggleModal={toggleModal}\n          isAdmin={isAdmin}\n          deleteTransaction={deleteTransaction}\n          isReadOnly={isReadOnly}\n        />\n        <AddModal\n          isOpen={Boolean(modals.add) && isAdmin}\n          closeModal={() => toggleModal('add')(false)}\n          handleAdd={handleAdd}\n          display={addAccountDisplay}\n          isValid={isValid}\n        />\n        <RemoveModal\n          isOpen={Boolean(modals.remove) && isAdmin}\n          value={modals.remove}\n          closeModal={() => toggleModal('remove')(false)}\n          handleRemove={handleRemove}\n          display={removeAccountDisplay(modals.remove)}\n        />\n      </Fragment>\n    )}\n  </Fragment>\n);\n\nAccountTab.propTypes = {\n  list: PropTypes.array.isRequired,\n  modals: PropTypes.shape({\n    add: PropTypes.bool.isRequired,\n    remove: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]).isRequired,\n    lock: PropTypes.bool.isRequired\n  }).isRequired,\n  toggleModal: PropTypes.func.isRequired,\n  handleAdd: PropTypes.func.isRequired,\n  handleRemove: PropTypes.func.isRequired,\n  isAdmin: PropTypes.bool.isRequired,\n  deleteTransaction: PropTypes.func.isRequired,\n  isValid: PropTypes.func.isRequired,\n  isReadOnly: PropTypes.bool.isRequired\n};\n\nexport default AccountTab;\n","// Libs\nimport React from 'react';\n// Rimble Components\nimport { Loader, Flex, Box } from 'rimble-ui';\n\nconst LoadingPage: React.FC<{}> = () => (\n  <Flex alignItems=\"center\" justifyContent=\"center\">\n    <Box mt={5}>\n      <Loader size=\"80px\" />\n    </Box>\n  </Flex>\n);\n\nexport default LoadingPage;\n","// Libs\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// Rimble Components\nimport { Text, Flex, Flash, Icon } from 'rimble-ui';\n// Styles\nimport styles from './styles.module.scss';\n\nconst NoContract: React.FC<{ tabName: string }> = ({ tabName }) => (\n  <Flash variant=\"danger\">\n    <Flex alignItems=\"center\">\n      <Icon name=\"Warning\" className={styles.icon} />\n      <Text>\n        Unable to locate <Text.span fontWeight={'bold'}>{tabName}</Text.span> contract. Please review the Dapp\n        configuration and confirm that the contract is correctly deployed.\n      </Text>\n    </Flex>\n  </Flash>\n);\n\nNoContract.propTypes = {\n  tabName: PropTypes.string.isRequired\n};\n\nexport default NoContract;\n","// Libs\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isAddress } from 'web3-utils';\nimport idx from 'idx';\n// Context\nimport { useAccountData } from '../../context/accountData';\nimport { useAdminData } from '../../context/adminData';\n// Utils\nimport useTab from './useTab';\nimport { errorToast } from '../../util/tabTools';\n// Components\nimport AccountTab from '../../components/AccountTab/AccountTab';\nimport LoadingPage from '../../components/LoadingPage/LoadingPage';\nimport NoContract from '../../components/Flashes/NoContract';\n// Constants\nimport {\n  PENDING_ADDITION,\n  FAIL_ADDITION,\n  PENDING_REMOVAL,\n  FAIL_REMOVAL,\n  SUCCESS,\n  FAIL\n} from '../../constants/transactions';\n\ntype AccountTabContainerProps = {\n  isOpen: boolean;\n};\n\ntype Account = {\n  address: string;\n  identifier: string;\n  status: string;\n};\n\nconst AccountTabContainer: React.FC<AccountTabContainerProps> = ({ isOpen }) => {\n  const { isAdmin, dataReady: adminDataReady } = useAdminData();\n  const { allowlist, isReadOnly, dataReady, accountRulesContract } = useAccountData();\n\n  const { list, modals, toggleModal, addTransaction, updateTransaction, deleteTransaction, openToast } = useTab(\n    allowlist,\n    (identifier: string) => ({ address: identifier })\n  );\n\n  if (!!accountRulesContract) {\n    const handleAdd = async (value: string) => {\n      try {\n        const tx = await accountRulesContract!.functions.addAccount(value);\n        toggleModal('add')(false);\n        addTransaction(value, PENDING_ADDITION);\n        const receipt = await tx.wait(1); // wait on receipt confirmations\n        const addEvent = receipt.events!.filter(e => e.event && e.event === 'AccountAdded').pop();\n        if (!addEvent) {\n          openToast(value, FAIL, `Error while processing account: ${value}`);\n        } else {\n          const addSuccessResult = idx(addEvent, _ => _.args[0]);\n          if (addSuccessResult === undefined) {\n            openToast(value, FAIL, `Error while adding account: ${value}`);\n          } else if (Boolean(addSuccessResult)) {\n            openToast(value, SUCCESS, `New account added: ${value}`);\n          } else {\n            openToast(value, FAIL, `Account \"${value}\" is already added`);\n          }\n        }\n        deleteTransaction(value);\n      } catch (e) {\n        toggleModal('add')(false);\n        updateTransaction(value, FAIL_ADDITION);\n        errorToast(e, value, openToast, () =>\n          openToast(value, FAIL, 'Could not add account', `${value} was unable to be added. Please try again.`)\n        );\n      }\n    };\n\n    const handleRemove = async (value: string) => {\n      try {\n        const est = await accountRulesContract!.estimate.removeAccount(value);\n        const tx = await accountRulesContract!.functions.removeAccount(value, { gasLimit: est.toNumber() * 2 });\n        toggleModal('remove')(false);\n        addTransaction(value, PENDING_REMOVAL);\n        await tx.wait(1); // wait on receipt confirmations\n        openToast(value, SUCCESS, `Removal of account processed: ${value}`);\n        deleteTransaction(value);\n      } catch (e) {\n        console.log('error', e);\n        toggleModal('remove')(false);\n        updateTransaction(value, FAIL_REMOVAL);\n        errorToast(e, value, openToast, () =>\n          openToast(value, FAIL, 'Could not remove account', `${value} was unable to be removed. Please try again.`)\n        );\n      }\n    };\n\n    const isValidAccount = (address: string) => {\n      let isValidAddress = isAddress(address);\n      if (!isValidAddress) {\n        return {\n          valid: false\n        };\n      }\n\n      let isDuplicateAccount =\n        list.filter((item: Account) => address.toLowerCase() === item.address.toLowerCase()).length > 0;\n      if (isDuplicateAccount) {\n        return {\n          valid: false,\n          msg: 'Account address is already added.'\n        };\n      }\n\n      return {\n        valid: true\n      };\n    };\n\n    const allDataReady: boolean = dataReady && adminDataReady;\n    if (isOpen && allDataReady) {\n      return (\n        <AccountTab\n          list={list}\n          modals={modals}\n          toggleModal={toggleModal}\n          handleAdd={handleAdd}\n          handleRemove={handleRemove}\n          isAdmin={isAdmin}\n          deleteTransaction={deleteTransaction}\n          isValid={isValidAccount}\n          isOpen={isOpen}\n          isReadOnly={isReadOnly!}\n        />\n      );\n    } else if (isOpen && !allDataReady) {\n      return <LoadingPage />;\n    } else {\n      return <div />;\n    }\n  } else if (isOpen && !accountRulesContract) {\n    return <NoContract tabName=\"Account Rules\" />;\n  } else {\n    return <div />;\n  }\n};\n\nAccountTabContainer.propTypes = {\n  isOpen: PropTypes.bool.isRequired\n};\n\nexport default AccountTabContainer;\n","// Libs\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// Rimble Components\nimport { Flex, Box, Heading, Button } from 'rimble-ui';\n\ntype TableHeader = {\n  number: Number;\n  openAddModal: () => void;\n  disabledAdd: boolean;\n};\n\nconst TableHeader: React.FC<TableHeader> = ({ number, openAddModal, disabledAdd }) => (\n  <Flex alignItems=\"center\" justifyContent=\"space-between\">\n    <Box>\n      <Heading.h2 fontWeight=\"700\">Admins ({number})</Heading.h2>\n    </Box>\n    <Flex alignItems=\"center\">\n      <Button icon=\"AddCircleOutline\" onClick={() => openAddModal()} disabled={disabledAdd}>\n        Add Admin\n      </Button>\n    </Flex>\n  </Flex>\n);\n\nTableHeader.propTypes = {\n  number: PropTypes.number.isRequired,\n  openAddModal: PropTypes.func.isRequired,\n  disabledAdd: PropTypes.bool.isRequired\n};\n\nexport default TableHeader;\n","// Libs\nimport React from 'react';\nimport classnames from 'classnames';\n// Rimble Components\nimport { Tooltip, Text } from 'rimble-ui';\n// Constants\nimport { PENDING_ADDITION, PENDING_REMOVAL } from '../../constants/transactions';\n// Styles\nimport styles from './styles.module.scss';\n\ntype TextWithTooltip = {\n  status: string;\n  isAdmin: boolean;\n  text: string;\n};\n\nconst TextWithTooltip: React.FC<TextWithTooltip> = ({ status, isAdmin, text }) => {\n  return status === PENDING_ADDITION || status === PENDING_REMOVAL || !isAdmin ? (\n    <Tooltip\n      placement=\"center\"\n      message={isAdmin ? 'This transaction is pending.' : 'You must be an admin to perform modifications.'}\n      variant=\"dark\"\n    >\n      <Text\n        className={classnames(\n          styles.ellipsis,\n          status === PENDING_REMOVAL\n            ? styles.pendingRemoval\n            : status === PENDING_ADDITION\n            ? styles.pendingAddition\n            : styles.lock\n        )}\n        fontSize=\"14px\"\n      >\n        {text}\n      </Text>\n    </Tooltip>\n  ) : (\n    <Text className={styles.ellipsis} fontSize=\"14px\">\n      {text}\n    </Text>\n  );\n};\n\nexport default TextWithTooltip;\n","// Libs\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// Rimble Components\nimport { Pill, Flex, Button } from 'rimble-ui';\n// Constant\nimport { PENDING_ADDITION, PENDING_REMOVAL, FAIL_ADDITION, FAIL_REMOVAL } from '../../constants/transactions';\n// Components\nimport TextWithTooltip from './TextWithTooltip';\n// Styles\nimport styles from './styles.module.scss';\n\ntype AdminRow = {\n  address: string;\n  status: string;\n  isSelf: boolean;\n  isAdmin: boolean;\n  deleteTransaction: (address: string) => void;\n  openRemoveModal: (address: string) => void;\n};\n\nconst AdminRow: React.FC<AdminRow> = ({ address, status, isSelf, isAdmin, deleteTransaction, openRemoveModal }) => (\n  <tr className={styles.row}>\n    <td>\n      <Flex alignItems=\"center\" className={styles.tooltipFix}>\n        <TextWithTooltip status={status} text={address} isAdmin={isAdmin} />\n      </Flex>\n    </td>\n    <td>\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        {status === 'active' ? (\n          <Pill color=\"#018002\" className={styles.pill}>\n            Active\n          </Pill>\n        ) : status === PENDING_ADDITION ? (\n          <Pill color=\"#FFA505\" className={styles.pill}>\n            Pending Addition\n          </Pill>\n        ) : status === PENDING_REMOVAL ? (\n          <Pill color=\"#FFA505\" className={styles.pill}>\n            Pending Removal\n          </Pill>\n        ) : status === FAIL_ADDITION ? (\n          <Flex>\n            <Pill color=\"#FF1C1E\" className={styles.pill}>\n              Addition Failed\n            </Pill>\n            <Pill color=\"green\" ml={2} className={styles.pill} onClick={() => deleteTransaction(address)}>\n              Clear\n            </Pill>\n          </Flex>\n        ) : status === FAIL_REMOVAL ? (\n          <Flex>\n            <Pill color=\"#FF1C1E\" className={styles.pill}>\n              Removal Failed\n            </Pill>\n            <Pill color=\"green\" ml={2} className={styles.pill} onClick={() => deleteTransaction(address)}>\n              Clear\n            </Pill>\n          </Flex>\n        ) : (\n          <div />\n        )}\n        {!isSelf && isAdmin && status === 'active' && (\n          <Button.Text\n            mainColor=\"#CCC\"\n            icon=\"Delete\"\n            icononly\n            className={styles.removeIcon}\n            onClick={() => openRemoveModal(address)}\n          />\n        )}\n      </Flex>\n    </td>\n  </tr>\n);\n\nAdminRow.propTypes = {\n  address: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n  isSelf: PropTypes.bool.isRequired,\n  isAdmin: PropTypes.bool.isRequired,\n  deleteTransaction: PropTypes.func.isRequired,\n  openRemoveModal: PropTypes.func.isRequired\n};\n\nexport default AdminRow;\n","// Libs\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// Rimble Components\nimport { Table, Box } from 'rimble-ui';\n// Components\nimport AdminTableHeader from './TableHeader';\nimport AdminRow from './Row';\n// Styles\nimport styles from './styles.module.scss';\n\ntype AdminTable = {\n  list: { address: string; status: string }[];\n  toggleModal: (name: 'add' | 'remove' | 'lock') => (value?: boolean | string) => void;\n  deleteTransaction: (identifer: string) => void;\n  isAdmin: boolean;\n  userAddress?: string;\n};\n\nconst AdminTable: React.FC<AdminTable> = ({ list, toggleModal, deleteTransaction, isAdmin, userAddress }) => (\n  <Box mt={5}>\n    <AdminTableHeader number={list.length} openAddModal={() => toggleModal('add')(true)} disabledAdd={!isAdmin} />\n    <Table mt={4}>\n      <thead>\n        <tr>\n          <th className={styles.headerCell}>Account Address</th>\n          <th className={styles.headerCell}>Status</th>\n        </tr>\n      </thead>\n      <tbody>\n        {list.map(({ address, status }) => (\n          <AdminRow\n            key={address}\n            address={address}\n            status={status}\n            isSelf={userAddress === address}\n            isAdmin={isAdmin}\n            deleteTransaction={deleteTransaction}\n            openRemoveModal={toggleModal('remove')}\n          />\n        ))}\n      </tbody>\n    </Table>\n  </Box>\n);\n\nAdminTable.propTypes = {\n  list: PropTypes.array.isRequired,\n  toggleModal: PropTypes.func.isRequired,\n  deleteTransaction: PropTypes.func.isRequired,\n  isAdmin: PropTypes.bool.isRequired,\n  userAddress: PropTypes.string\n};\n\nexport default AdminTable;\n","// Libs\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n// Components\nimport AdminTable from './Table';\nimport AddModal from '../../containers/Modals/Add';\nimport RemoveModal from '../../containers/Modals/Remove';\n// Constants\nimport { addAdminDisplay, removeAdminDisplay } from '../../constants/modals';\n\ntype AdminTab = {\n  list: { address: string; status: string }[];\n  userAddress?: string;\n  modals: {\n    add: boolean;\n    remove: boolean | string;\n    lock: boolean;\n  };\n  toggleModal: (name: 'add' | 'remove' | 'lock') => (value?: boolean | string) => void;\n  handleAdd: (value: any) => Promise<void>;\n  handleRemove: (value: any) => Promise<void>;\n  isAdmin: boolean;\n  deleteTransaction: (identifier: string) => void;\n  isValid: (address: string) => { valid: boolean; msg?: string };\n  isOpen: boolean;\n};\n\nconst AdminTab: React.FC<AdminTab> = ({\n  list,\n  userAddress,\n  modals,\n  toggleModal,\n  handleAdd,\n  handleRemove,\n  isAdmin,\n  deleteTransaction,\n  isValid,\n  isOpen\n}) => (\n  <Fragment>\n    {isOpen && (\n      <Fragment>\n        <AdminTable\n          list={list}\n          userAddress={userAddress}\n          toggleModal={toggleModal}\n          isAdmin={isAdmin}\n          deleteTransaction={deleteTransaction}\n        />\n        <AddModal\n          isOpen={modals.add && isAdmin}\n          closeModal={() => toggleModal('add')(false)}\n          handleAdd={handleAdd}\n          display={addAdminDisplay}\n          isValid={isValid}\n        />\n        <RemoveModal\n          isOpen={Boolean(modals.remove) && isAdmin}\n          value={modals.remove}\n          closeModal={() => toggleModal('remove')(false)}\n          handleRemove={handleRemove}\n          display={removeAdminDisplay(modals.remove)}\n        />\n      </Fragment>\n    )}\n  </Fragment>\n);\n\nAdminTab.propTypes = {\n  list: PropTypes.array.isRequired,\n  userAddress: PropTypes.string,\n  modals: PropTypes.shape({\n    add: PropTypes.bool.isRequired,\n    remove: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]).isRequired,\n    lock: PropTypes.bool.isRequired\n  }).isRequired,\n  toggleModal: PropTypes.func.isRequired,\n  handleAdd: PropTypes.func.isRequired,\n  handleRemove: PropTypes.func.isRequired,\n  isAdmin: PropTypes.bool.isRequired,\n  deleteTransaction: PropTypes.func.isRequired,\n  isValid: PropTypes.func.isRequired\n};\n\nexport default AdminTab;\n","// Libs\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isAddress } from 'web3-utils';\nimport idx from 'idx';\n// Context\nimport { useAdminData } from '../../context/adminData';\n// Utils\nimport useTab from './useTab';\nimport { errorToast } from '../../util/tabTools';\n// Components\nimport AdminTab from '../../components/AdminTab/AdminTab';\nimport LoadingPage from '../../components/LoadingPage/LoadingPage';\nimport NoContract from '../../components/Flashes/NoContract';\n// Constants\nimport {\n  PENDING_ADDITION,\n  FAIL_ADDITION,\n  PENDING_REMOVAL,\n  FAIL_REMOVAL,\n  SUCCESS,\n  FAIL\n} from '../../constants/transactions';\n\ntype AdminTabContainerProps = {\n  isOpen: boolean;\n};\n\ntype Admin = {\n  address: string;\n  identifier: string;\n  status: string;\n};\n\nconst AdminTabContainer: React.FC<AdminTabContainerProps> = ({ isOpen }) => {\n  const { admins, isAdmin, userAddress, dataReady, adminContract } = useAdminData();\n  const { list, modals, toggleModal, addTransaction, updateTransaction, deleteTransaction, openToast } = useTab(\n    admins || [],\n    (identifier: string) => ({ address: identifier })\n  );\n\n  if (!!adminContract) {\n    const handleAdd = async (value: string) => {\n      try {\n        const tx = await adminContract!.functions.addAdmin(value);\n        toggleModal('add')(false);\n        addTransaction(value, PENDING_ADDITION);\n        const receipt = await tx.wait(1); // wait on receipt confirmations\n        const addEvent = receipt.events!.filter(e => e.event && e.event === 'AdminAdded').pop();\n        if (!addEvent) {\n          openToast(value, FAIL, `Error while processing Admin account: ${value}`);\n        } else {\n          const addSuccessResult = idx(addEvent, _ => _.args[0]);\n          if (addSuccessResult === undefined) {\n            openToast(value, FAIL, `Error while processing Admin account: ${value}`);\n          } else if (Boolean(addSuccessResult)) {\n            openToast(value, SUCCESS, `New Admin account processed: ${value}`);\n          } else {\n            const message = idx(addEvent, _ => _.args[2]);\n            openToast(value, FAIL, message);\n          }\n        }\n        deleteTransaction(value);\n      } catch (e) {\n        toggleModal('add')(false);\n        updateTransaction(value, FAIL_ADDITION);\n        errorToast(e, value, openToast, () =>\n          openToast(value, FAIL, 'Could not add account as admin', `${value} was unable to be added. Please try again.`)\n        );\n      }\n    };\n\n    const handleRemove = async (value: string) => {\n      try {\n        const est = await adminContract!.estimate.removeAdmin(value);\n        const tx = await adminContract!.functions.removeAdmin(value, { gasLimit: est.toNumber() * 2 });\n        toggleModal('remove')(false);\n        addTransaction(value, PENDING_REMOVAL);\n        await tx.wait(1); // wait on receipt confirmations\n        openToast(value, SUCCESS, `Removal of admin account processed: ${value}`);\n        deleteTransaction(value);\n      } catch (e) {\n        toggleModal('remove')(false);\n        updateTransaction(value, FAIL_REMOVAL);\n        errorToast(e, value, openToast, () =>\n          openToast(\n            value,\n            FAIL,\n            'Could not remove admin account',\n            `${value} was unable to be removed. Please try again.`\n          )\n        );\n      }\n    };\n\n    const isValidAdmin = (address: string) => {\n      let isValidAddress = isAddress(address);\n      if (!isValidAddress) {\n        return {\n          valid: false\n        };\n      }\n\n      let isAdmin = list.filter((item: Admin) => item.address.toLowerCase() === address.toLowerCase()).length > 0;\n      if (isAdmin) {\n        return {\n          valid: false,\n          msg: 'Account address is already an admin.'\n        };\n      }\n\n      return {\n        valid: true\n      };\n    };\n\n    if (isOpen && dataReady) {\n      return (\n        <AdminTab\n          list={list}\n          userAddress={userAddress}\n          modals={modals}\n          toggleModal={toggleModal}\n          handleAdd={handleAdd}\n          handleRemove={handleRemove}\n          isAdmin={isAdmin}\n          deleteTransaction={deleteTransaction}\n          isValid={isValidAdmin}\n          isOpen={isOpen}\n        />\n      );\n    } else if (isOpen && !dataReady) {\n      return <LoadingPage />;\n    } else {\n      return <div />;\n    }\n  } else if (isOpen && !adminContract) {\n    return <NoContract tabName=\"Admin\" />;\n  } else {\n    return <div />;\n  }\n};\n\nAdminTabContainer.propTypes = {\n  isOpen: PropTypes.bool.isRequired\n};\n\nexport default AdminTabContainer;\n","// Libs\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// Rimble Components\nimport { Flex, Box, Heading, Button } from 'rimble-ui';\n\ntype TableHeader = {\n  number: number;\n  openAddModal: () => void;\n  disabledAdd: boolean;\n};\n\nconst TableHeader: React.FC<TableHeader> = ({ number, openAddModal, disabledAdd }) => (\n  <Flex alignItems=\"center\" justifyContent=\"space-between\">\n    <Box>\n      <Heading.h2 fontWeight=\"700\">Nodes ({number})</Heading.h2>\n    </Box>\n    <Flex alignItems=\"center\">\n      <Button icon=\"AddCircleOutline\" onClick={() => openAddModal()} disabled={disabledAdd}>\n        Add Node\n      </Button>\n    </Flex>\n  </Flex>\n);\n\nTableHeader.propTypes = {\n  number: PropTypes.number.isRequired,\n  openAddModal: PropTypes.func.isRequired,\n  disabledAdd: PropTypes.bool.isRequired\n};\n\nexport default TableHeader;\n","// Libs\nimport React from 'react';\nimport classnames from 'classnames';\n// Rimble Components\nimport { Tooltip, Text } from 'rimble-ui';\n// Constants\nimport { PENDING_ADDITION, PENDING_REMOVAL } from '../../constants/transactions';\n// Styles\nimport styles from './styles.module.scss';\n\ntype TextWithTooltip = {\n  status: string;\n  isAdmin: boolean;\n  text: string;\n};\n\nconst TextWithTooltip: React.FC<TextWithTooltip> = ({ status, isAdmin, text }) => {\n  return status === PENDING_ADDITION || status === PENDING_REMOVAL || !isAdmin ? (\n    <Tooltip\n      placement=\"center\"\n      message={isAdmin ? 'This transaction is pending.' : 'You must be an admin to perform modifications.'}\n      variant=\"dark\"\n    >\n      <Text\n        className={classnames(\n          styles.ellipsis,\n          status === PENDING_REMOVAL\n            ? styles.pendingRemoval\n            : status === PENDING_ADDITION\n            ? styles.pendingAddition\n            : styles.lock\n        )}\n        fontSize=\"14px\"\n      >\n        {text}\n      </Text>\n    </Tooltip>\n  ) : (\n    <Text className={styles.ellipsis} fontSize=\"14px\">\n      {text}\n    </Text>\n  );\n};\n\nexport default TextWithTooltip;\n","// Libs\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// Rimble Components\nimport { Pill, Flex, Button } from 'rimble-ui';\n// Constant\nimport { PENDING_ADDITION, PENDING_REMOVAL, FAIL_ADDITION, FAIL_REMOVAL } from '../../constants/transactions';\n// Components\nimport TextWithTooltip from './TextWithTooltip';\n// Styles\nimport styles from './styles.module.scss';\n\ntype EnodeRow = {\n  isAdmin: boolean;\n  deleteTransaction: (address: string) => void;\n  openRemoveModal: (address: string) => void;\n  enodeId: string;\n  ip: string;\n  port: string;\n  status: string;\n  identifier: string;\n};\n\nconst EnodeRow: React.FC<EnodeRow> = ({\n  isAdmin,\n  deleteTransaction,\n  openRemoveModal,\n  enodeId,\n  ip,\n  port,\n  status,\n  identifier\n}) => (\n  <tr className={styles.row}>\n    <td colSpan={2}>\n      <Flex alignItems=\"center\" className={styles.tooltipFix}>\n        <TextWithTooltip isAdmin={isAdmin} status={status} text={enodeId} />\n      </Flex>\n    </td>\n    <td>\n      <Flex alignItems=\"center\" className={styles.tooltipFix}>\n        <TextWithTooltip isAdmin={isAdmin} status={status} text={ip} />\n      </Flex>\n    </td>\n    <td>\n      <Flex alignItems=\"center\" className={styles.tooltipFix}>\n        <TextWithTooltip isAdmin={isAdmin} status={status} text={port} />\n      </Flex>\n    </td>\n    <td>\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        {status === 'active' ? (\n          <Pill color=\"#018002\" className={styles.pill}>\n            Active\n          </Pill>\n        ) : status === PENDING_ADDITION ? (\n          <Pill color=\"#FFA505\" className={styles.pill}>\n            Pending Addition\n          </Pill>\n        ) : status === PENDING_REMOVAL ? (\n          <Pill color=\"#FFA505\" className={styles.pill}>\n            Pending Removal\n          </Pill>\n        ) : status === FAIL_ADDITION ? (\n          <Flex>\n            <Pill color=\"#FF1C1E\" className={styles.pill}>\n              Addition Failed\n            </Pill>\n            <Pill color=\"green\" ml={2} className={styles.pill} onClick={() => deleteTransaction(identifier)}>\n              Clear\n            </Pill>\n          </Flex>\n        ) : status === FAIL_REMOVAL ? (\n          <Flex>\n            <Pill color=\"#FF1C1E\" className={styles.pill}>\n              Removal Failed\n            </Pill>\n            <Pill color=\"green\" ml={2} className={styles.pill} onClick={() => deleteTransaction(identifier)}>\n              Clear\n            </Pill>\n          </Flex>\n        ) : (\n          <div />\n        )}\n        {isAdmin && status === 'active' && (\n          <Button.Text\n            mainColor=\"#CCC\"\n            icon=\"Delete\"\n            icononly\n            className={styles.removeIcon}\n            onClick={() => openRemoveModal(identifier)}\n          />\n        )}\n      </Flex>\n    </td>\n  </tr>\n);\n\nEnodeRow.propTypes = {\n  enodeId: PropTypes.string.isRequired,\n  ip: PropTypes.string.isRequired,\n  port: PropTypes.string.isRequired,\n  identifier: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n  isAdmin: PropTypes.bool.isRequired,\n  deleteTransaction: PropTypes.func.isRequired\n};\n\nexport default EnodeRow;\n","// Libs\nimport React from 'react';\n// Styles\nimport styles from './styles.module.scss';\n\nconst EmptyRow: React.FC<{}> = () => (\n  <tr>\n    <td colSpan={5} className={styles.emptyLine}>\n      No nodes have been added.\n    </td>\n  </tr>\n);\n\nexport default EmptyRow;\n","// Libs\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// Rimble Components\nimport { Table, Box } from 'rimble-ui';\n// Components\nimport EnodeTableHeader from './TableHeader';\nimport EnodeRow from './Row';\nimport EmptyRow from './EmptyRow';\n// Styles\nimport styles from './styles.module.scss';\nimport { Enode } from '../../util/enodetools';\n\ntype EnodeTable = {\n  list: (Enode & { identifier: string; status: string })[];\n  toggleModal: (name: 'add' | 'remove' | 'lock') => (value?: boolean | string) => void;\n  deleteTransaction: (identifier: string) => void;\n  isAdmin: boolean;\n  isReadOnly: boolean;\n};\n\nconst EnodeTable: React.FC<EnodeTable> = ({ list, toggleModal, deleteTransaction, isAdmin }) => (\n  <Box mt={5}>\n    <EnodeTableHeader number={list.length} openAddModal={() => toggleModal('add')(true)} disabledAdd={!isAdmin} />\n    <Table mt={4}>\n      <thead>\n        <tr>\n          <th colSpan={2} className={styles.headerCell}>\n            Node ID\n          </th>\n          <th className={styles.headerCell}>IP Address</th>\n          <th className={styles.headerCell}>Port</th>\n          <th className={styles.headerCell}>Status</th>\n        </tr>\n      </thead>\n      <tbody>\n        {list.map(enode => (\n          <EnodeRow\n            key={enode.identifier}\n            isAdmin={isAdmin}\n            deleteTransaction={deleteTransaction}\n            openRemoveModal={toggleModal('remove')}\n            {...enode}\n          />\n        ))}\n        {list.length === 0 && <EmptyRow />}\n      </tbody>\n    </Table>\n  </Box>\n);\n\nEnodeTable.propTypes = {\n  list: PropTypes.array.isRequired,\n  toggleModal: PropTypes.func.isRequired,\n  deleteTransaction: PropTypes.func.isRequired,\n  isAdmin: PropTypes.bool.isRequired\n};\n\nexport default EnodeTable;\n","// Libs\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types'; // Components\nimport EnodeTable from './Table';\nimport AddModal from '../../containers/Modals/Add';\nimport RemoveModal from '../../containers/Modals/Remove';\n// Constants\nimport { addEnodeDisplay, removeEnodeDisplay } from '../../constants/modals';\nimport { Enode } from '../../util/enodetools';\n\ntype EnodeTab = {\n  list: (Enode & { identifier: string; status: string })[];\n  modals: {\n    add: boolean;\n    remove: string;\n    lock: boolean;\n  };\n  toggleModal: (name: 'add' | 'remove' | 'lock') => (value?: boolean | string) => void;\n  handleAdd: (value: any) => Promise<void>;\n  handleRemove: (value: any) => Promise<void>;\n  isAdmin: boolean;\n  deleteTransaction: (identifier: string) => void;\n  isValid: (address: string) => { valid: boolean };\n  isOpen: boolean;\n  isReadOnly: boolean;\n};\n\nconst EnodeTab: React.FC<EnodeTab> = ({\n  list,\n  modals,\n  toggleModal,\n  handleAdd,\n  handleRemove,\n  isAdmin,\n  isReadOnly,\n  deleteTransaction,\n  isValid,\n  isOpen\n}) => (\n  <Fragment>\n    {isOpen && (\n      <Fragment>\n        <EnodeTable\n          list={list}\n          toggleModal={toggleModal}\n          isAdmin={isAdmin}\n          deleteTransaction={deleteTransaction}\n          isReadOnly={isReadOnly}\n        />\n        <AddModal\n          isOpen={modals.add && isAdmin && !isReadOnly}\n          closeModal={() => toggleModal('add')(false)}\n          handleAdd={handleAdd}\n          display={addEnodeDisplay}\n          isValid={isValid}\n        />\n        <RemoveModal\n          isOpen={Boolean(modals.remove) && isAdmin && !isReadOnly}\n          value={modals.remove}\n          closeModal={() => toggleModal('remove')(false)}\n          handleRemove={handleRemove}\n          display={removeEnodeDisplay(modals.remove)}\n        />\n      </Fragment>\n    )}\n  </Fragment>\n);\n\nEnodeTab.propTypes = {\n  list: PropTypes.array.isRequired,\n  modals: PropTypes.shape({\n    add: PropTypes.bool.isRequired,\n    remove: PropTypes.oneOfType([PropTypes.string]).isRequired,\n    lock: PropTypes.bool.isRequired\n  }).isRequired,\n  toggleModal: PropTypes.func.isRequired,\n  handleAdd: PropTypes.func.isRequired,\n  handleRemove: PropTypes.func.isRequired,\n  isAdmin: PropTypes.bool.isRequired,\n  isReadOnly: PropTypes.bool.isRequired,\n  deleteTransaction: PropTypes.func.isRequired,\n  isValid: PropTypes.func.isRequired,\n  isOpen: PropTypes.bool.isRequired\n};\n\nexport default EnodeTab;\n","// Libs\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport idx from 'idx';\nimport { utils } from 'ethers';\n// Context\nimport { useAdminData } from '../../context/adminData';\nimport { useNodeData } from '../../context/nodeData';\n// Utils\nimport useTab from './useTab';\nimport {\n  identifierToParams,\n  paramsToIdentifier,\n  enodeToParams,\n  Enode,\n  isEqual,\n  isValidEnode\n} from '../../util/enodetools';\nimport { errorToast } from '../../util/tabTools';\n// Components\nimport EnodeTab from '../../components/EnodeTab/EnodeTab';\nimport LoadingPage from '../../components/LoadingPage/LoadingPage';\nimport NoContract from '../../components/Flashes/NoContract';\n// Constants\nimport {\n  PENDING_ADDITION,\n  PENDING_REMOVAL,\n  FAIL_ADDITION,\n  FAIL_REMOVAL,\n  SUCCESS,\n  FAIL\n} from '../../constants/transactions';\n\ntype EnodeTabContainerProps = {\n  isOpen: boolean;\n};\n\nconst EnodeTabContainer: React.FC<EnodeTabContainerProps> = ({ isOpen }) => {\n  const { isAdmin, dataReady: adminDataReady } = useAdminData();\n  const { allowlist, isReadOnly, dataReady, nodeRulesContract } = useNodeData();\n\n  const { list, modals, toggleModal, addTransaction, updateTransaction, deleteTransaction, openToast } = useTab(\n    allowlist,\n    identifierToParams\n  );\n\n  if (!!nodeRulesContract) {\n    const handleAdd = async (value: string) => {\n      const { enodeId, ip, port } = enodeToParams(value);\n      const identifier = paramsToIdentifier({\n        enodeId,\n        ip,\n        port\n      });\n\n      try {\n        const tx = await nodeRulesContract!.functions.addEnode(enodeId, ip, utils.bigNumberify(port));\n        toggleModal('add')(false);\n        addTransaction(identifier, PENDING_ADDITION);\n        const receipt = await tx.wait(1); // wait on receipt confirmations\n        const addEvent = receipt.events!.filter(e => e.event && e.event === 'NodeAdded').pop();\n        if (!addEvent) {\n          openToast(value, FAIL, `Error while processing node: ${value}`);\n        } else {\n          const addSuccessResult = idx(addEvent, _ => _.args[0]);\n          if (addSuccessResult === undefined) {\n            openToast(value, FAIL, `Error while adding node: ${value}`);\n          } else if (Boolean(addSuccessResult)) {\n            openToast(value, SUCCESS, `New node added: ${value}`);\n          } else {\n            openToast(value, FAIL, `Node \"${value}\" is already added`);\n          }\n        }\n        deleteTransaction(value);\n      } catch (e) {\n        toggleModal('add')(false);\n        updateTransaction(identifier, FAIL_ADDITION);\n        errorToast(e, identifier, openToast, () =>\n          openToast(identifier, FAIL, 'Could not add node', `${enodeId} was unable to be added. Please try again`)\n        );\n      }\n    };\n\n    const handleRemove = async (value: string) => {\n      const { enodeId, ip, port } = identifierToParams(value);\n      try {\n        const est = await nodeRulesContract!.estimate.removeEnode(enodeId, ip, utils.bigNumberify(port));\n        const tx = await nodeRulesContract!.functions.removeEnode(enodeId, ip, utils.bigNumberify(port), {\n          gasLimit: est.toNumber() * 2\n        });\n        toggleModal('remove')(false);\n        addTransaction(value, PENDING_REMOVAL);\n        await tx.wait(1); // wait on receipt confirmations\n        openToast(value, SUCCESS, `Removal of node processed: ${enodeId}`);\n        deleteTransaction(value);\n      } catch (e) {\n        toggleModal('remove')(false);\n        updateTransaction(value, FAIL_REMOVAL);\n        errorToast(e, value, openToast, () =>\n          openToast(value, FAIL, 'Could not remove node', `${enodeId} was unable to be removed. Please try again.`)\n        );\n      }\n    };\n\n    const isDuplicateEnode = (enode: string) => {\n      return list.filter((item: Enode) => isEqual(item, enodeToParams(enode))).length > 0;\n    };\n\n    const isValid = (enode: string) => {\n      if (!isValidEnode(enode)) {\n        return {\n          valid: false\n        };\n      } else if (isDuplicateEnode(enode)) {\n        return {\n          valid: false,\n          msg: 'Specified enode is already added.'\n        };\n      } else {\n        return {\n          valid: true\n        };\n      }\n    };\n\n    const allDataReady = dataReady && adminDataReady;\n    if (isOpen && allDataReady) {\n      return (\n        <EnodeTab\n          list={list}\n          modals={modals}\n          toggleModal={toggleModal}\n          handleAdd={handleAdd}\n          handleRemove={handleRemove}\n          isAdmin={isAdmin}\n          deleteTransaction={deleteTransaction}\n          isValid={isValid}\n          isReadOnly={isReadOnly!}\n          isOpen={isOpen}\n        />\n      );\n    } else if (isOpen && !allDataReady) {\n      return <LoadingPage />;\n    } else {\n      return <div />;\n    }\n  } else if (isOpen && !nodeRulesContract) {\n    return <NoContract tabName=\"Node Rules\" />;\n  } else {\n    return <div />;\n  }\n};\n\nEnodeTabContainer.propTypes = {\n  isOpen: PropTypes.bool.isRequired\n};\n\nexport default EnodeTabContainer;\n","// Libs\nimport React, { Fragment, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { AccountDataProvider } from '../../context/accountData';\nimport { AdminDataProvider } from '../../context/adminData';\nimport { NodeDataProvider } from '../../context/nodeData';\n// Components\nimport TabSelector from './TabSelector';\nimport Toasts from '../../containers/Toasts/Toasts';\nimport AccountTab from '../../containers/Tabs/Account';\nimport AdminTab from '../../containers/Tabs/Admin';\nimport EnodeTab from '../../containers/Tabs/Enode';\n// Context\nimport { ToastProvider } from '../../context/toasts';\n// Constants\nimport { ACCOUNT_TAB, ADMIN_TAB, ENODE_TAB } from '../../constants/tabs';\n\ntype Dashboard = {\n  tab: string;\n  setTab: (tab: string) => void;\n};\n\nconst Dashboard: React.FC<Dashboard> = ({ tab, setTab }) => (\n  <Fragment>\n    <TabSelector setTab={setTab} tab={tab} />\n    {\n      <ToastProvider>\n        <Toasts />\n        <AdminDataProvider>\n          <AccountDataProvider>\n            <AccountTab isOpen={tab === ACCOUNT_TAB} />\n          </AccountDataProvider>\n          <AdminTab isOpen={tab === ADMIN_TAB} />\n          <NodeDataProvider>\n            <EnodeTab isOpen={tab === ENODE_TAB} />\n          </NodeDataProvider>\n        </AdminDataProvider>\n      </ToastProvider>\n    }\n  </Fragment>\n);\n\nDashboard.propTypes = {\n  setTab: PropTypes.func.isRequired,\n  tab: PropTypes.string.isRequired\n};\n\nexport default memo(Dashboard);\n","// Libs\nimport React, { useState } from 'react';\n// Components\nimport Dashboard from '../../components/Dashboard/Dashboard';\n// Constant\nimport { ACCOUNT_TAB } from '../../constants/tabs';\n\nconst DashboardContainer: React.FC = () => {\n  const [tab, setTab] = useState(ACCOUNT_TAB);\n  return <Dashboard tab={tab} setTab={setTab} />;\n};\n\nexport default DashboardContainer;\n","// Libs\nimport React from 'react';\n// Rimble Components\nimport { Flash, Text, Link, Icon, Flex } from 'rimble-ui';\n// Styles\nimport styles from './styles.module.scss';\n\nconst NoProvider: React.FC<{}> = () => (\n  <Flash variant=\"danger\">\n    <Flex alignItems=\"center\">\n      <Icon name=\"Warning\" className={styles.icon} />\n      <Text bold>You are not connected to your network.</Text>\n    </Flex>\n    <Flex alignItems=\"center\">\n      <div className={styles.icon} />\n      <Text>If you need help, we recommend MetaMask to connect, see</Text>\n      <Link ml={1} href=\"https://www.metamask.io\" target=\"_blank\" title=\"Access MetaMask page\">\n        www.metamask.io\n      </Link>\n      <Text>.</Text>\n    </Flex>\n  </Flash>\n);\n\nexport default NoProvider;\n","// Libs\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// Rimble Components\nimport { Flash, Text, Icon, Flex } from 'rimble-ui';\n// Styles\nimport styles from './styles.module.scss';\n\nconst WrongNetwork: React.FC<{ networkId: number }> = ({ networkId }) => (\n  <Flash variant=\"danger\">\n    <Flex alignItems=\"center\">\n      <Icon name=\"Warning\" className={styles.icon} />\n      <Text bold>Connect to the network where the contracts are deployed.</Text>\n    </Flex>\n    <Flex alignItems=\"center\">\n      <div className={styles.icon} />\n      <Text className=\"wrongNetworkMessage\">\n        Change your network using MetaMask.\n        {networkId === 1\n          ? \" You're currently on the Main Ethereum Network.\"\n          : networkId === 2\n          ? \" You're currently on the Morden Classic Test Network.\"\n          : networkId === 3\n          ? \" You're currently on the Ropsten Test Network.\"\n          : networkId === 4\n          ? \" You're currently on the Rinkeby Test Network.\"\n          : networkId === 5\n          ? \" You're currently on the Goerli Test Network.\"\n          : ` You're currently on unknown network of id ${networkId}.`}\n      </Text>\n    </Flex>\n  </Flash>\n);\n\nWrongNetwork.propTypes = {\n  networkId: PropTypes.number.isRequired\n};\n\nexport default WrongNetwork;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#202328',\n  white: '#FFF',\n  blue: '#36ADF1',\n  green: '#01D49A',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#CCD8E1',\n  consensysblue: '#2C56DD',\n  protocol: '#2C56DD'\n};\n\n// rimble palette\nconst colors = {\n  protocol: {\n    base: baseColors.protocol,\n    text: readableColor(baseColors.protocol),\n    light: [null, tint(0.2, baseColors.protocol)],\n    dark: [null, shade(0.2, baseColors.protocol)]\n  },\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)]\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)]\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)]\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)]\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)]\n  }\n};\n\nconst protocol = colors.protocol;\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { protocol };\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\n\nexport default baseColors;\n","import { tint, shade } from 'polished';\n\nimport baseColors, { protocol, blue, green, yellow, red } from './colors';\n\n// theme.js\nexport default {\n  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64],\n  fontWeights: [0, 300, 400, 600, 700],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5\n  },\n  fonts: {\n    serif: 'athelas, georgia, times, serif',\n    sansSerif: '\"Source Sans Pro\", -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid transparent'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: ['0', '0px 2px 4px rgba(0, 0, 0, 0.1)', '0 7px 14px rgba(50,50,93,.1)'],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: protocol.base,\n    'primary-light': protocol.light[1],\n    'primary-dark': protocol.dark[1],\n    blue: baseColors.consensysblue,\n    copyColor: '#3F3D4B',\n    // black: '#000',\n    black: '#000e1a',\n    'near-black': '#111',\n    'dark-gray': '#333',\n    'mid-gray': '#555',\n    // gray: ' #777',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)'\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)'\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA'\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: tint(0.9, blue.base),\n      borderColor: blue.base\n    }\n  },\n  buttons: {\n    primary: {\n      color: protocol.text,\n      backgroundColor: protocol.base,\n      // use css custom props\n      '--main-color': protocol.base,\n      '--contrast-color': protocol.text\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem'\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem'\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem'\n    }\n  }\n};\n","import AccountIngress from '../chain/abis/AccountIngress.json';\nimport NodeIngress from '../chain/abis/NodeIngress.json';\n\nexport type Config = {\n  accountIngressAddress: string;\n  nodeIngressAddress: string;\n  networkId: string;\n};\n\nconst loadConfig = async (): Promise<Config> => {\n  // production loader\n  if (process.env.NODE_ENV === 'production') {\n    const response = await fetch('config.json');\n\n    if (response.ok) {\n      return response.json().catch((reason: any) => {\n        console.log('config parsing failed with error:', reason);\n        throw new Error('Config parsing failed with error: ' + reason);\n      });\n    } else {\n      console.log('Failed to load config file');\n      throw new Error('Config file not found');\n    }\n    // development defaults\n  } else {\n    // ganache vs besu\n    // if env variables exists, then we will assume we are connecting to besu, otherwise we will assume ganache\n    let accountIngressAddress = process.env.REACT_APP_ACCOUNT_INGRESS_CONTRACT_ADDRESS;\n    let nodeIngressAddress = process.env.REACT_APP_NODE_INGRESS_CONTRACT_ADDRESS;\n    let networkId = process.env.REACT_APP_CHAIN_ID;\n\n    if (accountIngressAddress) {\n      console.log('Using environment variables for contract addresses and network id');\n      //make sure other two are also defined\n      if (!nodeIngressAddress) {\n        throw new Error('Node Ingress Address environment variable is missing');\n      }\n\n      if (!networkId) {\n        throw new Error('Network Id environment variable is missing');\n      }\n\n      return { accountIngressAddress, nodeIngressAddress, networkId };\n    }\n\n    console.log('Using truffle (develop) defaults');\n    // We're cheating here by knowing what truffle will write when it's running a ganache server.\n    // We're forcing the types because we know what the network entry in the json file will look like so long as it's there.\n    const accountIngressNetworks = Object.values(AccountIngress.networks);\n    if (accountIngressNetworks.length === 0) {\n      throw new Error(\"Account Ingress Contract abi doesn't contain any networks, probably not deployed\");\n    }\n    accountIngressAddress = (accountIngressNetworks[0] as { address: string }).address;\n\n    const nodeIngressNetworks = Object.values(NodeIngress.networks);\n    if (nodeIngressNetworks.length === 0) {\n      throw new Error(\"Node Ingress Contract abi doesn't contain any networks, probably not deployed\");\n    }\n    nodeIngressAddress = (nodeIngressNetworks[0] as { address: string }).address;\n\n    // if we haven't errored by this point then we're being driven by env and until we do it better we should accept any network\n    const nodeIngressNetworkId = Object.keys(NodeIngress.networks)[0]\n      ? (Object.keys(NodeIngress.networks)[0] as string)\n      : 'any';\n\n    return { accountIngressAddress, nodeIngressAddress, networkId: nodeIngressNetworkId };\n  }\n};\n\nexport const configPromise = loadConfig();\n","// Libs\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\n// Components\nimport Layout from './components/Layout/Layout';\nimport Initializer from './containers/Layout/Initializer';\nimport Dashboard from './containers/Dashboard/Dashboard';\nimport NoProviderFlash from './components/Flashes/NoProvider';\nimport WrongNetworkFlash from './components/Flashes/WrongNetwork';\n// Theme\nimport theme from './constants/theme';\n// Context\nimport { NetworkProvider } from './context/network';\nimport { Config, configPromise } from './util/configLoader';\nimport { ConfigDataProvider } from './context/configData';\n\nexport const initApp = async ({ target }: { target: HTMLElement }) => {\n  const config = await configPromise;\n  ReactDOM.render(<App config={config} />, target);\n};\n\nconst App: React.FC<{ config: Config }> = ({ config }) => (\n  <ConfigDataProvider config={config}>\n    <ThemeProvider theme={theme}>\n      <NetworkProvider>\n        <Layout>\n          <Initializer NoProvider={NoProviderFlash} WrongNetwork={WrongNetworkFlash}>\n            <Dashboard />\n          </Initializer>\n        </Layout>\n      </NetworkProvider>\n    </ThemeProvider>\n  </ConfigDataProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './index.css';\nimport { initApp } from './App';\nimport * as serviceWorker from './serviceWorker';\n\ninitApp({ target: document.getElementById('root')! });\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fadeInOut\":\"styles_fadeInOut__Lr54t\",\"fadeIn\":\"styles_fadeIn__xquKV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"choicesContainer\":\"styles_choicesContainer__ezr5y\",\"choiceBox\":\"styles_choiceBox__APIBC\",\"selected\":\"styles_selected__a-boV\"};"],"sourceRoot":""}